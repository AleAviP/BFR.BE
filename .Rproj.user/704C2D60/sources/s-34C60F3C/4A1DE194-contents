library(BFR.BE) #My code
library(fanc) #LASSO

##Creating the data
set.seed(123)
n<-100
p<-1000
q<-10

length=trunc((p-1+q)/(.75*q+.25))
offset=trunc(length*.25)
p<-length+(length-offset-1)*(q-1) #New p

M<-matrix(0,p,q)
end<-1
for(i in (1:q)){
  start<-end-(i!=1)*offset
  end<-start+length-1
  M[start:end,i]<-1
}

E <- rmvnorm(n,numeric(p),diag(p))
Z <- rmvnorm(n,numeric(q),diag(q))
X <- Z%*%t(M) + E
Sigma<-M%*%t(M)+diag(p)

##Estimation
#MOM
MOM_10=BFR.BE.EM.CV(x=X,q = 10,varianceBE=FALSE)
MOM_100=BFR.BE.EM.CV(x=X,q = 100,varianceBE=FALSE)

#Normal
Normal_10=BFR.BE.EM.CV(x=X,q = 10, prior="Normal",varianceBE=FALSE)
Normal_100=BFR.BE.EM.CV(x=X,q = 100, prior="Normal",varianceBE=FALSE)

#Flat
Flat_10=BFR.BE.EM.CV(x=X,q = 10, prior="Flat",varianceBE=FALSE)
Flat_100=BFR.BE.EM.CV(x=X,q = 100, prior="Flat",varianceBE=FALSE)

##Comparisons
#LASSO
rho.aux=as.matrix(seq(0.2,0.75,length.out=6))
rho.aux.1=as.matrix(seq(0.0075,0.75,length.out=10))
fit_lasso_10<- fanc(X,factors=10,rho=rho.aux.1,gamma=Inf)
fit_lasso_100<- fanc(X,factors=100,rho=rho.aux,gamma=Inf)

lasso_10<-select(fit_lasso_10, criterion="BIC", gamma=Inf)
lasso_100<-select(fit_lasso_100, criterion="BIC", gamma=Inf)

lasso_10.Ez=E.Z(X,as.matrix(lasso_10$loadings),lasso_10$uniquenesses,diag(10))$z
lasso_100.Ez=E.Z(X,as.matrix(lasso_100$loadings),lasso_100$uniquenesses,diag(100))$z

##Table
q.hat.2=data.frame(Flat_10=10,
                   Normal_10=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_10=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   #FastBFA_10=sum(apply(Laplace_10_Vl20$P_100tar>0.5,2,sum)!=0),
                   #Lasso_10=sum(apply(lasso_10$loadings,2,sum)!=0),
                   Flat_100=100,
                   Normal_100=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_100=sum(apply(MOM_100$gamma>0.5,2,sum)!=0))#,
                   #FastBFA_100=sum(apply(Laplace_100_Vl20$P_100tar>0.5,2,sum)!=0),
                   #Lasso_100=sum(apply(lasso_100$loadings,2,sum)!=0))

m.hat.2=data.frame(Flat_10=1000*10,
                   Normal_10=sum(Normal_10$gamma>0.5),
                   MOM_10=sum(MOM_10$gamma>0.5),
                   #FastBFA_10=sum(Laplace_100_Vl20$P_100tar),
                   #Lasso_10=sum(apply(lasso_10$loadings!=0,2,sum)),
                   Flat_100=1000*100,
                   Normal_100=sum(Normal_100$gamma>0.5),
                   MOM_100=sum(MOM_100$gamma>0.5))#,
                   #FastBFA_100=sum(Laplace_100_Vl20$P_100tar),
                   #Lasso_100=sum(apply(lasso_100$loadings!=0,2,sum)))

FN.ZM=data.frame(Flat_10=FNorm(Flat_10$Ez,Flat_10$M,Z,M),
                 Normal_10=FNorm(Normal_10$Ez,Normal_10$Mpost,Z,M),
                 MOM_10=FNorm(MOM_10$Ez,MOM_10$Mpost,Z,M),
                 #FastBFA_10=FNorm(Laplace_10_Vl20$Omega,Laplace_10_Vl20$B,Z,M),
                 #Lasso_10=FNorm(lasso_10.Ez,as.matrix(lasso_10$loadings),Z,M),
                 Flat_100=FNorm(Flat_100$Ez,Flat_100$M,Z,M),
                 Normal_100=FNorm(Normal_100$Ez,Normal_100$Mpost,Z,M),
                 MOM_100=FNorm(MOM_100$Ez,MOM_100$Mpost,Z,M))#,
                 #FastBFA_100=FNorm(Laplace_100_Vl20$Omega,Laplace_100_Vl20$B,Z,M),
                 #Lasso_100=FNorm(lasso_100.Ez,as.matrix(lasso_100$loadings),Z,M))



FN.covX=data.frame(Flat_10=FNorm2(Flat_10$sigma,Flat_10$M,Sigma),
                   Normal_10=FNorm2(Normal_10$sigma,Normal_10$Mpost,Sigma),
                   MOM_10=FNorm2(MOM_10$sigma,MOM_10$Mpost,Sigma),
                   #FastBFA_10=FNorm2(Laplace_10_Vl20$sigma,Laplace_10_Vl20$B,Sigma),
                   #Lasso_10=FNorm2(lasso_10$uniquenesses,as.matrix(lasso_10$loadings),Sigma),
                   Flat_100=FNorm2(Flat_100$sigma,Flat_100$M,Sigma),
                   Normal_100=FNorm2(Normal_100$sigma,Normal_100$Mpost,Sigma),
                   MOM_100=FNorm2(MOM_100$sigma,MOM_100$Mpost,Sigma))#,
                   #FastBFA_100=FNorm2(Laplace_100_Vl20$sigma,Laplace_100_Vl20$B,Sigma),
                   #Lasso_100=FNorm2(lasso_100$uniquenesses,as.matrix(lasso_100$loadings),Sigma))


it=data.frame(Flat_10=Flat_10$iterations,
              Normal_10=Normal_10$iterations,
              MOM_10=MOM_10$iterations,
              #FastBFA_10=(Laplace_10_Vl5$niter+Laplace_10_Vl10$niter+Laplace_10_Vl10$niter),
              #Lasso_10=0,
              Flat_100=Flat_100$iterations,
              Normal_100=Normal_100$iterations,
              MOM_100=MOM_100$iterations)#,
              #FastBFA_100=(Laplace_100_Vl5$niter+Laplace_100_Vl10$niter+Laplace_100_Vl10$niter),
              #Lasso_100=0)

tableFN=rbind.data.frame(q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.ZM,FN_covX=FN.covX,it=it)
