biocLite("BEclear")
library(BEclear)
data(BEclearData)
ex.samples[1:10,] #Muy pocas observaciones

biocLite("TCGAcrcmRNA")
library(TCGAcrcmRNA)
data(TCGAmrna)

X=exprs(TCGAmrna)
#NO entend√≠ un carajo

#OTHER
biocLite("RTCGA")

# Install the clinical and mRNA gene expression data packages
biocLite("RTCGA.clinical")
biocLite("RTCGA.mRNA")

####RICH data TCGA2STAT
require(rlist)
library(TCGA2STAT)
library(clusterSim)
library(sva)
library(caret)
require(cate)
#Sys.setenv(R_GZIPCMD ="C:\\Rtools\\bin\\tar.exe")
#Sys.setenv(TAR ="C:\\Rtools\\bin\\tar.exe")
#Breast<-getTCGA(disease="BRCA", data.type="mRNA_Array", type="G450", clinical=TRUE)
#dim(Breast$dat) #17814   590
#head(Breast$dat[,1:3])

#Lung squamous cell carcinoma
LUSC.G450<-getTCGA(disease="LUSC", data.type="mRNA_Array", type="G450", clinical=TRUE)
dim(LUSC.G450$dat) #17814   154
head(LUSC.G450$dat[,1:3])
LUSC.U133<-getTCGA(disease="LUSC", data.type="mRNA_Array", type="U133", clinical=TRUE, cvars="yearstobirth")
dim(LUSC.U133$dat) #12042   133
head(LUSC.U133$dat[,1:3])
LUSC.Huex<-getTCGA(disease="LUSC", data.type="mRNA_Array", type="Huex", clinical=TRUE, cvars="yearstobirth")
dim(LUSC.Huex$dat) #18632   112
head(LUSC.Huex$dat[,1:3])

#Combine function
combine3 <- function(X1, X2) {
  fids <- intersect(featureNames(X1), featureNames(X2))
  X1 <- X1$dat[fids,]
  X2 <- X2$dat[fids,]
  cbind(X1,X2)
}

X<- combine3(LUSC.U133,LUSC.Huex)
dim(X) #11975   245
batch<-c(rep("U133",ncol(LUSC.U133$dat)),
         rep("Huex",ncol(LUSC.Huex$dat)))

var <- data.frame(variance = apply(X,1,var))
ggplot(var, aes(x=variance))+
  geom_histogram(aes(y = ..density..,fill=..count..),binwidth = 0.25)+
  theme_bw()+
  geom_vline(xintercept = quantile(var$variance,.90),colour="indianred3", linetype = 2, size = 1.5)

index.var <- c(1:nrow(X))[var$variance>quantile(var$variance,.90)]
X_var=X[index.var,]
dim(X_var) #1198  245

#Normalising data
#X_var_std<-data.Normalization (X_var,type="n1",normalization="row")
#X_var_std<-data.Normalization (t(X_var),type="n1",normalization="column")

X_var_aux=preProcess(t(X_var), method=c("center", "scale"))
X_var_std <- predict(X_var_aux, t(X_var))

# combine4 <- function(X1, X2, index) {
#   fids <- intersect(featureNames(X1), featureNames(X2))
#   X1 <- X1$dat[fids,]
#   X1 <- data.Normalization (X1[index,],type="n1",normalization="row")
#   X2 <- X2$dat[fids,]
#   X2 <- data.Normalization (X2[index,],type="n1",normalization="row")
#   cbind(X1,X2)
# }

#X_var_std <-combine4(LUSC.U133,LUSC.Huex,index.var)
#X_var_std<-t(X_var_std)

#Adding more variables
n = ncol(X_var) #245
p = nrow(X_var) #1198
B = matrix(ncol=2, c(ifelse(batch=="U133",1,0),ifelse(batch=="U133",0,1)))
p_b = ncol(B)
V = as.factor(matrix(nrow=n,c(LUSC.U133$merged.dat[,"YEARSTOBIRTH"],LUSC.Huex$merged.dat[,"YEARSTOBIRTH"])))
p_v = ncol(V)

###COMBAT
#Same factor
mod_2 <- model.matrix(~as.factor(V), data=data.frame(X_var_std))
combat_edata_2 <- ComBat(dat=t(X_var_std), batch=B[,1], mod=mod_2)
#Number of factors
ev <- eigen(cor((combat_edata_2))) # get eigenvalues
nS <- nScree(x=ev$values)
plotnScree(nS) #51
cov_var_COMBAT = cov(combat_edata_2)
pcaCOMBATvar <- prcomp(t(combat_edata_2))
plot(nScree(pcaCOMBATvar$sdev)) #noc33

FA_var_COMBAT =  fa.em(t(combat_edata_2),33,tol=0.001, maxiter = 100)

ggplot(data = data.frame(FA_var_COMBAT$Z),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="ComBat") + theme(legend.position="none")

####No correction
ev <- eigen(cor(t(X_var_std))) # get eigenvalues
nS <- nScree(x=ev$values)
plotnScree(nS) #23
pcaNCvar <- prcomp(t(X_var_std))
plot(nScree(pcaNCvar$sdev)) #noc15

FA_var = fa.em((X_var_std),15,tol=0.001, maxiter = 100)
ggplot(data = data.frame(FA_var$Z[,1:2]),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="First 2 Factors of gene expression without Batch correction") + theme(legend.position="none")

####CV####
set.seed(123)
index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,trunc(n/10),replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}
### MOM
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM")
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nr=mean(FN.CV.BE.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100r=mean(FN.CV.BE.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)) #TRUE

fnMOM100nrW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)) #FALSE

MOM_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)))
#MOM_100_NR=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=FALSE)

ggplot(data = data.frame(MOM_100$Ez),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="MOM") + theme(legend.position="none")

###Normal
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal")
}, .parallel = FALSE)

#Varimax
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=TRUE)
}, .parallel = FALSE)

fnNormal100nr=mean(FN.CV.BE.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100r=mean(FN.CV.BE.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.BE.jk.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.BE.jk.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)) #FALSE

fnNormal100nrW=mean(FN.CV.BE.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.BE.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)) #FALSE

Normal_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)))

###Flat
resultFlat_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat")
}, .parallel = FALSE)

#Varimax
resultFlat_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varimax=TRUE)
}, .parallel = FALSE)

fnFlat100nr=mean(FN.CV.BE.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100r=mean(FN.CV.BE.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjk=mean(FN.CV.BE.jk.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjk=mean(FN.CV.BE.jk.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100r,fnFlat100rjk)<=min(fnFlat100nr,fnFlat100nrjk)) #TRUE

fnFlat100nrW=mean(FN.CV.BE.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rW=mean(FN.CV.BE.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)) #FALSE

Flat_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varimax=(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)))

#Different initiation MOM
init_Normal<-list(theta=Flat_100$Theta,
                  sigma=diag(Flat_100$sigma[,1]),
                  M=Flat_100$M,
                  z=Flat_100$Ez,
                  D=Flat_100$D,
                  p.gamma=Flat_100$gamma,
                  g.theta=Flat_100$gTheta)

resultpMOM_100_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal)
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nrdifInit=mean(FN.CV.BE.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rdifInit=mean(FN.CV.BE.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rdifInit,fnMOM100rjkdifInit)<=min(fnMOM100nrdifInit,fnMOM100nrjkdifInit)) #TRUE

fnMOM100nrWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)) #FALSE

MOM_100_difInit=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)))

####Survival analysis####
# Fit Cox Model
survival_data = data.frame(days2death=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"daystodeath"],
                                                  LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"daystodeath"])),
                           stage=as.factor(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"pathologicstage"],
                                              LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"pathologicstage"])),
                           age=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"yearstobirth"],
                                           LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"yearstobirth"])),
                           status=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"vitalstatus"],
                                               LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"vitalstatus"])))

survival_data$days2death[is.na(survival_data$days2death)]=0
# Kaplan Meier Survival Curve
y_surv <- Surv(survival_data$days2death,survival_data$status)
#MOM
#All
Model_MOM<-data.frame(y=y_surv,MOM_100$Ez[,apply(MOM_100$gamma>.5,2,sum)!=0])
form_MOM <- formula(y ~ .,Model_MOM)
cox_bmt <- coxph(form_MOM,data = Model_MOM)
summary(cox_bmt)$concordance[1]
#CV
y_CV=llply(.data = 1:10, .fun = function(k){
  Surv(survival_data$days2death[-group[[k]]], survival_data$status[-group[[k]]])
}, .parallel = FALSE)
Model_CV_MOM=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV[[k]]$Ez[,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV[[k]]$Ez[,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM[[k]]),data = Model_CV_MOM[[k]])
}, .parallel = FALSE)
Cox_train_MOM<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_MOM)

#Normal
#All
Model_Normal<-data.frame(y=y_surv,Normal_100$Ez[,apply(Normal_100$gamma>.5,2,sum)!=0])
form_Normal <- formula(y ~ .,Model_Normal)
cox_bmt_Normal <- coxph(form_Normal,data = Model_Normal)
summary(cox_bmt_Normal)$concordance[1]
#CV
Model_CV_Normal=llply(.data = 1:10, .fun = function(k){
  if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
    data.frame(y=y_CV[[k]],resultNormal_100_var_CV[[k]]$Ez[,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultNormal_100_CV[[k]]$Ez[,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_Normal=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Normal[[k]]),data = Model_CV_Normal[[k]])
}, .parallel = FALSE)
Cox_train_Normal<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Normal[[k]])$concordance[1]))
#Ez of test
if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_var_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_Normal <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Normal_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Normal)

#Flat
#All
Model_Flat<-data.frame(y=y_surv,Flat_100$Ez[,1:85])
form_Flat <- formula(y ~ .,Model_Flat)
cox_bmt_Flat <- coxph(form_Flat,data = Model_Flat)
summary(cox_bmt_Flat)$concordance[1]
#CV
Model_CV_Flat=llply(.data = 1:10, .fun = function(k){
  if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }else{
    data.frame(y=y_CV[[k]],resultFlat_100_CV[[k]]$Ez[,1:85])
  }

}, .parallel = FALSE)
cox_bmt_CV_Flat=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Flat[[k]]),data = Model_CV_Flat[[k]])
}, .parallel = FALSE)
Cox_train_Flat<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Flat[[k]])$concordance[1]))
#Ez of test
if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_var_CV,group,100)
}else{
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_CV,group,100)
}
predictions_CV_Flat_test=lapply(1:10, function(k) predict(cox_bmt_CV_Flat[[k]],data.frame(EZ_test_Flat[[k]])))
Cox_test_Flat <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Flat_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Flat)

#MOM2
Model_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM_difInit[[k]]),data = Model_CV_MOM_difInit[[k]])
}, .parallel = FALSE)
Cox_train_MOM_difInit<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM_difInit[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM_difInit <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test_difInit[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
mean(Cox_test_MOM_difInit)
#COMBAT
#All
Model_COMBAT<-data.frame(y=y_surv,FA_var_COMBAT$Z)
form_COMBAT  <- formula(y ~.,Model_COMBAT)
cox_bmt_COMBAT <- coxph(form_COMBAT,data = Model_COMBAT)
summary(cox_bmt_COMBAT)$concordance[1]
#CV
resultCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(t(combat_edata_2[,-group[[y]]]),17,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultCOMBAT_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_COMBAT[[k]]),data = Model_CV_COMBAT[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV,group)
predictions_CV_COMBAT_test=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT[[k]],data.frame(EZ_test_COMBAT[[k]])))
Cox_test_COMBAT <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_COMBAT)
FN.test.COMBAT<-unlist(lapply(1:10, function(k) norm(t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma),type ="F")))
FN.test.COMBAT.W<-unlist(lapply(1:10, function(k) norm((t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma))%*%diag(1/resultCOMBAT_CV[[k]]$Sigma),type ="F")))

#No correction
Model_NC<-data.frame(y=y_surv,FA_var$Z)
form_NC  <- formula(y ~.,Model_NC)
cox_bmt_NC <- coxph(form_NC,data = Model_NC)
summary(cox_bmt_NC)$concordance[1]
#CV
resultNC_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(X_var_std[-group[[y]],],4,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_NC=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultNC_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_NC=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_NC[[k]]),data = Model_CV_NC[[k]])
}, .parallel = FALSE)
Cox_train_NC<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_NC[[k]])$concordance[1]))
#Ez of test
EZ_test_NC<-Ez.test.COMBAT.ov(X_var_std,resultNC_CV,group)
predictions_CV_NC_test=lapply(1:10, function(k) predict(cox_bmt_CV_NC[[k]],data.frame(EZ_test_NC[[k]])))
Cox_test_NC <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_NC_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

######Tables###
q.sim=data.frame(Flat=100,
                 Normal_SS=100,
                 MOM_SS=100,
                 MOM_SS2=100,
                 ComBat=100)

q.hat.2=data.frame(Flat=sum(Flat_100$gTheta!=0),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0),
                   ComBat=ncol(FA_var_COMBAT$Gamma))

Cox.index=data.frame(Flat=mean(Cox_test_Flat,na.rm=TRUE),
                     Normal_SS=mean(Cox_test_Normal,na.rm=TRUE),
                     MOM_SS=mean(Cox_test_MOM,na.rm=TRUE),
                     MOM_SS2=mean(Cox_test_MOM_difInit,na.rm=TRUE),
                     ComBat=mean(Cox_test_COMBAT,na.rm=TRUE))

Cox.index.med=data.frame(Flat=median(Cox_test_Flat,na.rm=TRUE),
                         Normal_SS=median(Cox_test_Normal,na.rm=TRUE),
                         MOM_SS=median(Cox_test_MOM,na.rm=TRUE),
                         MOM_SS2=median(Cox_test_MOM_difInit,na.rm=TRUE),
                         ComBat=median(Cox_test_COMBAT,na.rm=TRUE))

FN.x=data.frame(Flat=norm(X_var_std-
                            (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                          type ="F"),
                Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
                  norm(X_var_std-
                         (Normal_100$Ez%*%t(PostM2(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (Normal_100$Ez%*%t(PostM(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                              type ="F")},
                MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
                  norm(X_var_std-
                         (MOM_100$Ez%*%t(PostM2(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100$Ez%*%t(PostM(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                              type ="F")},
                MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
                  norm(X_var_std-
                         (MOM_100_difInit$Ez%*%t(PostM2(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100_difInit$Ez%*%t(PostM(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                              type ="F")},
                ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

FN.x.NP=data.frame(Flat=norm(X_var_std-
                               (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                             type ="F"),
                   Normal_SS=norm(X_var_std-
                                    (Normal_100$Ez%*%t(Normal_100$M)+cbind(V,B)%*%t(Normal_100$Theta)),
                                  type ="F"),
                   MOM_SS=norm(X_var_std-
                                 (MOM_100$Ez%*%t(MOM_100$M)+cbind(V,B)%*%t(MOM_100$Theta)),
                               type ="F"),
                   MOM_SS2=norm(X_var_std-
                                  (MOM_100_difInit$Ez%*%t(MOM_100_difInit$M)+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                                type ="F"),
                   ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

Fn.x.test=data.frame(Flat=min(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk),
                     Normal_SS=min(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk),
                     MOM_SS=min(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk),
                     MOM_SS2=min(fnMOM100rdifInit,fnMOM100rjkdifInit,fnMOM100nrdifInit,fnMOM100nrjkdifInit),
                     ComBat=mean(FN.test.COMBAT))

Fn.x.test.NP=data.frame(Flat=if((min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW))){
  mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
    mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
    mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)},
  ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

it=data.frame(Flat=Flat_100$iterations,
              Normal_SS=Normal_100$iterations,
              MOM_SS=MOM_100$iterations,
              MOM_SS2=MOM_100_difInit$iterations,
              ComBat=FA_var_COMBAT$niter)

m.hat=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                 Normal_SS=sum(Normal_100$gamma>0.5),
                 MOM_SS=sum(MOM_100$gamma>0.5),
                 MOM_SS2=sum(MOM_100_difInit$gamma>0.5),
                 ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

m.hat.2=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

CVW.output=data.frame(Flat=c(fnFlat100rW,fnFlat100rjkW,fnFlat100nrW,fnFlat100nrjkW,
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      Normal=c(fnNormal100rW,fnNormal100rjkW,fnNormal100nrW,fnNormal100nrjkW,
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM=c(fnMOM100rW,fnMOM100rjkW,fnMOM100nrW,fnMOM100nrjkW,
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      ComBat=rep(mean(FN.test.COMBAT.W),6))

CV.output=data.frame(Flat=c(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk,
                            mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     Normal=c(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk,
                              mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                              mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM=c(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk,
                           mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                           mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                            mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     ComBat=rep(norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"),6))
rownames(CVW.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")
rownames(CV.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")

write.csv(CV.output, file = "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCV01")
write.csv(CVW.output, file = "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCVW01")
tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,mhat=m.hat,mhat2=m.hat.2,Cox_mean=Cox.index,Cox_median=Cox.index.med,FN_x=FN.x,FN_x_NP=FN.x.NP,FN_x_test=Fn.x.test,FN_x_test_NP=Fn.x.test.NP,it=it)
round(t(tableFN2),3)
write.csv(t(tableFN2), file = "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V3lun01")

tableFN=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Cox_mean=Cox.index,Cox_median=Cox.index.med,FN_x=FN.x,FN_x_NP=FN.x.NP,FN_x_test=Fn.x.test,FN_x_test_NP=Fn.x.test.NP,it=it)
round(t(tableFN),3)
write.csv(t(tableFN), file = "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V2lun01")
CoxTrain=cbind.data.frame(ComBat=Cox_train_COMBAT,Flat=Cox_train_Flat,Normal=Cox_train_Normal,MOM=Cox_train_MOM,MOM2=Cox_train_MOM_difInit)
write.csv(CoxTrain, file = "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V2lunCoxTrain01")
CoxTest=cbind.data.frame(ComBat=Cox_test_COMBAT,Flat=Cox_test_Flat,Normal=Cox_test_Normal,MOM=Cox_test_MOM,MOM2=Cox_test_MOM_difInit)
write.csv(CoxTest, file = "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V2lunCoxTest01")

write.csv(Flat_100$Ez, "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/Flatlun")
write.csv(MOM_100$Ez, "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/MOMlun")
write.csv(MOM_100_difInit$Ez, "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/MOM2lun")
write.csv(Normal_100$Ez, "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/Normallun")
write.csv(FA_var_COMBAT$Z, "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/COMBATlun")
write.csv(FA_var$Z, "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/FAlun")
write.csv(MOM_100$gamma, "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/MOMlunG")
write.csv(MOM_100_difInit$gamma, "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/MOM2lunG")
write.csv(batch, "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/batchlun")
write.csv(survival_data, "~/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/survlun")

######Plots###
dev.off()
boxplot(Cox_test_COMBAT,Cox_test_Flat,Cox_test_Normal,Cox_test_MOM,
        col=c("white","white","white","gray"),
        names=c("ComBat","Flat","Normal-SS","MOM-SS"),
        ylim=c(0,1),
        main="Survival analysis")
abline(h=round(median(Cox_test_MOM,na.rm = TRUE),3),col="indianred3",lwd=3,lty=2)

boxplot(Cox_test_COMBAT,Cox_test_Flat,Cox_test_Normal,Cox_test_MOM,Cox_test_MOM_difInit,
        col=c("white","white","white","gray","lightgray"),
        names=c("ComBat","Flat","Normal-SS","MOM-SS","MOM-SS2"),
        ylim=c(0,1),
        main="Survival analysis")
#abline(h=round(median(Cox_test_MOM_difInit,na.rm = TRUE),3),col="indianred3",lwd=3,lty=2)
abline(h=round(median(Cox_test_COMBAT,na.rm = TRUE),3),col="darkblue",lwd=3,lty=2)

boxplot(Cox_test_COMBAT,Cox_test_Normal,Cox_test_MOM,Cox_test_MOM_difInit,
        col=c("white","white","gray","lightgray"),
        names=c("ComBat","Normal-SS","MOM-SS","MOM-SS2"),
        ylim=c(0,1),
        main="Survival analysis")
abline(h=round(median(Cox_test_MOM_difInit,na.rm = TRUE),3),col="indianred3",lwd=3,lty=2)

par(mfrow=c(1,5))
plot(FA_var$Z,pch=c(18,8)[as.factor(batch)],
     col=c("darkgray","black")[as.factor(survival_data$status)],
     main = "No batcheffect adjustment",
     cex=1.5,cex.lab=1.5,cex.main=1.5,
     xlab = "",
     ylab = "")

plot(FA_var_COMBAT$Z,pch=c(18,8)[as.factor(batch)],
     col=c("darkgray","black","gray")[as.factor(survival_data$status)],
     main = "ComBat correction",
     cex=1.5,cex.lab=1.5,cex.main=1.5,
     xlab = "",
     ylab = "")

plot(Flat_100$Ez[,1:2],pch=c(18,8)[as.factor(batch)],
     col=c("darkgray","black","gray")[as.factor(survival_data$status)],
     main = "Flat",
     cex=1.5,cex.lab=1.5,cex.main=1.5,
     xlab = "",
     ylab = "")

plot(Normal_100$Ez[,1:2],pch=c(18,8)[as.factor(batch)],
     col=c("darkgray","black","gray")[as.factor(survival_data$status)],
     main = "Normal-SS",
     cex=1.5,cex.lab=1.5,cex.main=1.5,
     xlab = "",
     ylab = "")

plot(x=MOM_100_difInit$Ez[,1:2],pch=c(18,8)[as.factor(batch)],
     col=c("darkgray","black","gray")[as.factor(survival_data$status)],
     main="MOM-SS",
     cex=1.5,cex.lab=1.5,cex.main=1.5,
     xlab = "",
     ylab = "")

dev.off()

save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/LUN.RData")
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/LUN.RData")

#####MORE RUNS####
####CV####
set.seed(124)
index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,trunc(n/10),replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}
### MOM
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM")
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nr=mean(FN.CV.BE.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100r=mean(FN.CV.BE.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)) #TRUE

fnMOM100nrW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)) #FALSE

MOM_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)))
#MOM_100_NR=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=FALSE)

ggplot(data = data.frame(MOM_100$Ez),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="MOM") + theme(legend.position="none")

###Normal
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal")
}, .parallel = FALSE)

#Varimax
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=TRUE)
}, .parallel = FALSE)

fnNormal100nr=mean(FN.CV.BE.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100r=mean(FN.CV.BE.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.BE.jk.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.BE.jk.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)) #FALSE

fnNormal100nrW=mean(FN.CV.BE.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.BE.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)) #FALSE

Normal_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)))

###Flat
resultFlat_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat")
}, .parallel = FALSE)

#Varimax
resultFlat_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=TRUE)
}, .parallel = FALSE)

fnFlat100nr=mean(FN.CV.BE.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100r=mean(FN.CV.BE.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjk=mean(FN.CV.BE.jk.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjk=mean(FN.CV.BE.jk.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100r,fnFlat100rjk)<=min(fnFlat100nr,fnFlat100nrjk)) #TRUE

fnFlat100nrW=mean(FN.CV.BE.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rW=mean(FN.CV.BE.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)) #TRUE

Flat_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)))

#Different initiation MOM
init_Normal<-list(theta=Normal_100$Theta,
                  sigma=diag(Normal_100$sigma[,1]),
                  M=Normal_100$M,
                  z=Normal_100$Ez,
                  D=Normal_100$D,
                  p.gamma=Normal_100$gamma,
                  g.theta=Normal_100$gTheta)

resultpMOM_100_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal)
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nrdifInit=mean(FN.CV.BE.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rdifInit=mean(FN.CV.BE.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rdifInit,fnMOM100rjkdifInit)<=min(fnMOM100nrdifInit,fnMOM100nrjkdifInit)) #TRUE

fnMOM100nrWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)) #FALSE

MOM_100_difInit=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)))

####Survival analysis####
# Fit Cox Model
survival_data = data.frame(days2death=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"daystodeath"],
                                                   LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"daystodeath"])),
                           stage=as.factor(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"pathologicstage"],
                                             LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"pathologicstage"])),
                           age=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"yearstobirth"],
                                            LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"yearstobirth"])),
                           status=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"vitalstatus"],
                                               LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"vitalstatus"])))

survival_data$days2death[is.na(survival_data$days2death)]=0
# Kaplan Meier Survival Curve
y_surv <- Surv(survival_data$days2death,survival_data$status)
#MOM
#All
Model_MOM<-data.frame(y=y_surv,MOM_100$Ez[,apply(MOM_100$gamma>.5,2,sum)!=0])
form_MOM <- formula(y ~ .,Model_MOM)
cox_bmt <- coxph(form_MOM,data = Model_MOM)
summary(cox_bmt)$concordance[1]
#CV
y_CV=llply(.data = 1:10, .fun = function(k){
  Surv(survival_data$days2death[-group[[k]]], survival_data$status[-group[[k]]])
}, .parallel = FALSE)
Model_CV_MOM=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV[[k]]$Ez[,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV[[k]]$Ez[,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM[[k]]),data = Model_CV_MOM[[k]])
}, .parallel = FALSE)
Cox_train_MOM<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_MOM)

#Normal
#All
Model_Normal<-data.frame(y=y_surv,Normal_100$Ez[,apply(Normal_100$gamma>.5,2,sum)!=0])
form_Normal <- formula(y ~ .,Model_Normal)
cox_bmt_Normal <- coxph(form_Normal,data = Model_Normal)
summary(cox_bmt_Normal)$concordance[1]
#CV
Model_CV_Normal=llply(.data = 1:10, .fun = function(k){
  if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
    data.frame(y=y_CV[[k]],resultNormal_100_var_CV[[k]]$Ez[,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultNormal_100_CV[[k]]$Ez[,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_Normal=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Normal[[k]]),data = Model_CV_Normal[[k]])
}, .parallel = FALSE)
Cox_train_Normal<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Normal[[k]])$concordance[1]))
#Ez of test
if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_var_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_Normal <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Normal_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Normal)

#Flat
#All
Model_Flat<-data.frame(y=y_surv,Flat_100$Ez[,1:85])
form_Flat <- formula(y ~ .,Model_Flat)
cox_bmt_Flat <- coxph(form_Normal,data = Model_Flat)
summary(cox_bmt_Flat)$concordance[1]
#CV
Model_CV_Flat=llply(.data = 1:10, .fun = function(k){
  if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }else{
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }

}, .parallel = FALSE)
cox_bmt_CV_Flat=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Flat[[k]]),data = Model_CV_Flat[[k]])
}, .parallel = FALSE)
Cox_train_Flat<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Flat[[k]])$concordance[1]))
#Ez of test
if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_var_CV,group,100)
}else{
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_CV,group,100)
}
predictions_CV_Flat_test=lapply(1:10, function(k) predict(cox_bmt_CV_Flat[[k]],data.frame(EZ_test_Flat[[k]])))
Cox_test_Flat <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Flat_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Flat)

#MOM2
Model_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM_difInit[[k]]),data = Model_CV_MOM_difInit[[k]])
}, .parallel = FALSE)
Cox_train_MOM_difInit<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM_difInit[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM_difInit <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test_difInit[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

#COMBAT
#All
Model_COMBAT<-data.frame(y=y_surv,FA_var_COMBAT$Z)
form_COMBAT  <- formula(y ~.,Model_COMBAT)
cox_bmt_COMBAT <- coxph(form_COMBAT,data = Model_COMBAT)
summary(cox_bmt_COMBAT)$concordance[1]
#CV
resultCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(t(combat_edata_2[,-group[[y]]]),17,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultCOMBAT_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_COMBAT[[k]]),data = Model_CV_COMBAT[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV,group)
predictions_CV_COMBAT_test=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT[[k]],data.frame(EZ_test_COMBAT[[k]])))
Cox_test_COMBAT <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_COMBAT)
FN.test.COMBAT<-unlist(lapply(1:10, function(k) norm(t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma),type ="F")))
FN.test.COMBAT.W<-unlist(lapply(1:10, function(k) norm((t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma))%*%diag(1/resultCOMBAT_CV[[k]]$Sigma),type ="F")))

#No correction
Model_NC<-data.frame(y=y_surv,FA_var$Z)
form_NC  <- formula(y ~.,Model_NC)
cox_bmt_NC <- coxph(form_NC,data = Model_NC)
summary(cox_bmt_NC)$concordance[1]
#CV
resultNC_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(X_var_std[-group[[y]],],4,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_NC=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultNC_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_NC=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_NC[[k]]),data = Model_CV_NC[[k]])
}, .parallel = FALSE)
Cox_train_NC<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_NC[[k]])$concordance[1]))
#Ez of test
EZ_test_NC<-Ez.test.COMBAT.ov(X_var_std,resultNC_CV,group)
predictions_CV_NC_test=lapply(1:10, function(k) predict(cox_bmt_CV_NC[[k]],data.frame(EZ_test_NC[[k]])))
Cox_test_NC <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_NC_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

######Tables###
q.sim=data.frame(Flat=100,
                 Normal_SS=100,
                 MOM_SS=100,
                 MOM_SS2=100,
                 ComBat=100)

q.hat.2=data.frame(Flat=sum(Flat_100$gTheta!=0),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0),
                   ComBat=ncol(FA_var_COMBAT$Gamma))

Cox.index=data.frame(Flat=mean(Cox_test_Flat,na.rm=TRUE),
                     Normal_SS=mean(Cox_test_Normal,na.rm=TRUE),
                     MOM_SS=mean(Cox_test_MOM,na.rm=TRUE),
                     MOM_SS2=mean(Cox_test_MOM_difInit,na.rm=TRUE),
                     ComBat=mean(Cox_test_COMBAT,na.rm=TRUE))

Cox.index.med=data.frame(Flat=median(Cox_test_Flat,na.rm=TRUE),
                         Normal_SS=median(Cox_test_Normal,na.rm=TRUE),
                         MOM_SS=median(Cox_test_MOM,na.rm=TRUE),
                         MOM_SS2=median(Cox_test_MOM_difInit,na.rm=TRUE),
                         ComBat=median(Cox_test_COMBAT,na.rm=TRUE))

FN.x=data.frame(Flat=norm(X_var_std-
                            (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                          type ="F"),
                Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
                  norm(X_var_std-
                         (Normal_100$Ez%*%t(PostM2(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (Normal_100$Ez%*%t(PostM(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                              type ="F")},
                MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
                  norm(X_var_std-
                         (MOM_100$Ez%*%t(PostM2(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100$Ez%*%t(PostM(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                              type ="F")},
                MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
                  norm(X_var_std-
                         (MOM_100_difInit$Ez%*%t(PostM2(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100_difInit$Ez%*%t(PostM(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                              type ="F")},
                ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

FN.x.NP=data.frame(Flat=norm(X_var_std-
                               (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                             type ="F"),
                   Normal_SS=norm(X_var_std-
                                    (Normal_100$Ez%*%t(Normal_100$M)+cbind(V,B)%*%t(Normal_100$Theta)),
                                  type ="F"),
                   MOM_SS=norm(X_var_std-
                                 (MOM_100$Ez%*%t(MOM_100$M)+cbind(V,B)%*%t(MOM_100$Theta)),
                               type ="F"),
                   MOM_SS2=norm(X_var_std-
                                  (MOM_100_difInit$Ez%*%t(MOM_100_difInit$M)+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                                type ="F"),
                   ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

Fn.x.test=data.frame(Flat=min(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk),
                     Normal_SS=min(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk),
                     MOM_SS=min(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk),
                     MOM_SS2=min(fnMOM100rdifInit,fnMOM100rjkdifInit,fnMOM100nrdifInit,fnMOM100nrjkdifInit),
                     ComBat=mean(FN.test.COMBAT))

Fn.x.test.NP=data.frame(Flat=if((min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW))){
  mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
    mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
    mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)},
  ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

it=data.frame(Flat=Flat_100$iterations,
              Normal_SS=Normal_100$iterations,
              MOM_SS=MOM_100$iterations,
              MOM_SS2=MOM_100_difInit$iterations,
              ComBat=FA_var_COMBAT$niter)

m.hat=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                 Normal_SS=sum(Normal_100$gamma>0.5),
                 MOM_SS=sum(MOM_100$gamma>0.5),
                 MOM_SS2=sum(MOM_100_difInit$gamma>0.5),
                 ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

m.hat.2=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

CVW.output=data.frame(Flat=c(fnFlat100rW,fnFlat100rjkW,fnFlat100nrW,fnFlat100nrjkW,
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      Normal=c(fnNormal100rW,fnNormal100rjkW,fnNormal100nrW,fnNormal100nrjkW,
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM=c(fnMOM100rW,fnMOM100rjkW,fnMOM100nrW,fnMOM100nrjkW,
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      ComBat=rep(mean(FN.test.COMBAT.W),6))

CV.output=data.frame(Flat=c(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk,
                            mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     Normal=c(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk,
                              mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                              mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM=c(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk,
                           mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                           mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                            mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     ComBat=rep(norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"),6))
rownames(CVW.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")
rownames(CV.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")

write.csv(CV.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCV02")
write.csv(CVW.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCVW02")
tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,mhat=m.hat,mhat2=m.hat.2,Cox_mean=Cox.index,Cox_median=Cox.index.med,FN_x=FN.x,FN_x_NP=FN.x.NP,FN_x_test=Fn.x.test,FN_x_test_NP=Fn.x.test.NP,it=it)
round(t(tableFN2),3)
write.csv(t(tableFN2), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V3lun02")

####CV####
set.seed(125)
index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,trunc(n/10),replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}
### MOM
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM")
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nr=mean(FN.CV.BE.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100r=mean(FN.CV.BE.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)) #TRUE

fnMOM100nrW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)) #FALSE

######AQUI VOY######
MOM_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)))
#MOM_100_NR=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=FALSE)

ggplot(data = data.frame(MOM_100$Ez),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="MOM") + theme(legend.position="none")

###Normal
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal")
}, .parallel = FALSE)

#Varimax
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=TRUE)
}, .parallel = FALSE)

fnNormal100nr=mean(FN.CV.BE.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100r=mean(FN.CV.BE.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.BE.jk.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.BE.jk.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)) #FALSE

fnNormal100nrW=mean(FN.CV.BE.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.BE.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)) #FALSE

Normal_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)))

###Flat
resultFlat_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat")
}, .parallel = FALSE)

#Varimax
resultFlat_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=TRUE)
}, .parallel = FALSE)

fnFlat100nr=mean(FN.CV.BE.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100r=mean(FN.CV.BE.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjk=mean(FN.CV.BE.jk.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjk=mean(FN.CV.BE.jk.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100r,fnFlat100rjk)<=min(fnFlat100nr,fnFlat100nrjk)) #TRUE

fnFlat100nrW=mean(FN.CV.BE.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rW=mean(FN.CV.BE.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)) #TRUE

Flat_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)))

#Different initiation MOM
init_Normal<-list(theta=Normal_100$Theta,
                  sigma=diag(Normal_100$sigma[,1]),
                  M=Normal_100$M,
                  z=Normal_100$Ez,
                  D=Normal_100$D,
                  p.gamma=Normal_100$gamma,
                  g.theta=Normal_100$gTheta)

resultpMOM_100_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal)
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nrdifInit=mean(FN.CV.BE.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rdifInit=mean(FN.CV.BE.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rdifInit,fnMOM100rjkdifInit)<=min(fnMOM100nrdifInit,fnMOM100nrjkdifInit)) #TRUE

fnMOM100nrWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)) #FALSE

MOM_100_difInit=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)))

####Survival analysis####
# Fit Cox Model
survival_data = data.frame(days2death=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"daystodeath"],
                                                   LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"daystodeath"])),
                           stage=as.factor(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"pathologicstage"],
                                             LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"pathologicstage"])),
                           age=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"yearstobirth"],
                                            LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"yearstobirth"])),
                           status=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"vitalstatus"],
                                               LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"vitalstatus"])))

survival_data$days2death[is.na(survival_data$days2death)]=0
# Kaplan Meier Survival Curve
y_surv <- Surv(survival_data$days2death,survival_data$status)
#MOM
#All
Model_MOM<-data.frame(y=y_surv,MOM_100$Ez[,apply(MOM_100$gamma>.5,2,sum)!=0])
form_MOM <- formula(y ~ .,Model_MOM)
cox_bmt <- coxph(form_MOM,data = Model_MOM)
summary(cox_bmt)$concordance[1]
#CV
y_CV=llply(.data = 1:10, .fun = function(k){
  Surv(survival_data$days2death[-group[[k]]], survival_data$status[-group[[k]]])
}, .parallel = FALSE)
Model_CV_MOM=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV[[k]]$Ez[,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV[[k]]$Ez[,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM[[k]]),data = Model_CV_MOM[[k]])
}, .parallel = FALSE)
Cox_train_MOM<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_MOM)

#Normal
#All
Model_Normal<-data.frame(y=y_surv,Normal_100$Ez[,apply(Normal_100$gamma>.5,2,sum)!=0])
form_Normal <- formula(y ~ .,Model_Normal)
cox_bmt_Normal <- coxph(form_Normal,data = Model_Normal)
summary(cox_bmt_Normal)$concordance[1]
#CV
Model_CV_Normal=llply(.data = 1:10, .fun = function(k){
  if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
    data.frame(y=y_CV[[k]],resultNormal_100_var_CV[[k]]$Ez[,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultNormal_100_CV[[k]]$Ez[,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_Normal=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Normal[[k]]),data = Model_CV_Normal[[k]])
}, .parallel = FALSE)
Cox_train_Normal<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Normal[[k]])$concordance[1]))
#Ez of test
if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_var_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_Normal <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Normal_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Normal)

#Flat
#All
Model_Flat<-data.frame(y=y_surv,Flat_100$Ez[,1:85])
form_Flat <- formula(y ~ .,Model_Flat)
cox_bmt_Flat <- coxph(form_Normal,data = Model_Flat)
summary(cox_bmt_Flat)$concordance[1]
#CV
Model_CV_Flat=llply(.data = 1:10, .fun = function(k){
  if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }else{
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }

}, .parallel = FALSE)
cox_bmt_CV_Flat=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Flat[[k]]),data = Model_CV_Flat[[k]])
}, .parallel = FALSE)
Cox_train_Flat<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Flat[[k]])$concordance[1]))
#Ez of test
if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_var_CV,group,100)
}else{
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_CV,group,100)
}
predictions_CV_Flat_test=lapply(1:10, function(k) predict(cox_bmt_CV_Flat[[k]],data.frame(EZ_test_Flat[[k]])))
Cox_test_Flat <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Flat_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Flat)

#MOM2
Model_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM_difInit[[k]]),data = Model_CV_MOM_difInit[[k]])
}, .parallel = FALSE)
Cox_train_MOM_difInit<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM_difInit[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM_difInit <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test_difInit[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

#COMBAT
#All
Model_COMBAT<-data.frame(y=y_surv,FA_var_COMBAT$Z)
form_COMBAT  <- formula(y ~.,Model_COMBAT)
cox_bmt_COMBAT <- coxph(form_COMBAT,data = Model_COMBAT)
summary(cox_bmt_COMBAT)$concordance[1]
#CV
resultCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(t(combat_edata_2[,-group[[y]]]),17,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultCOMBAT_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_COMBAT[[k]]),data = Model_CV_COMBAT[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV,group)
predictions_CV_COMBAT_test=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT[[k]],data.frame(EZ_test_COMBAT[[k]])))
Cox_test_COMBAT <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_COMBAT)
FN.test.COMBAT<-unlist(lapply(1:10, function(k) norm(t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma),type ="F")))
FN.test.COMBAT.W<-unlist(lapply(1:10, function(k) norm((t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma))%*%diag(1/resultCOMBAT_CV[[k]]$Sigma),type ="F")))

#No correction
Model_NC<-data.frame(y=y_surv,FA_var$Z)
form_NC  <- formula(y ~.,Model_NC)
cox_bmt_NC <- coxph(form_NC,data = Model_NC)
summary(cox_bmt_NC)$concordance[1]
#CV
resultNC_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(X_var_std[-group[[y]],],4,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_NC=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultNC_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_NC=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_NC[[k]]),data = Model_CV_NC[[k]])
}, .parallel = FALSE)
Cox_train_NC<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_NC[[k]])$concordance[1]))
#Ez of test
EZ_test_NC<-Ez.test.COMBAT.ov(X_var_std,resultNC_CV,group)
predictions_CV_NC_test=lapply(1:10, function(k) predict(cox_bmt_CV_NC[[k]],data.frame(EZ_test_NC[[k]])))
Cox_test_NC <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_NC_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

######Tables###
q.sim=data.frame(Flat=100,
                 Normal_SS=100,
                 MOM_SS=100,
                 MOM_SS2=100,
                 ComBat=100)

q.hat.2=data.frame(Flat=sum(Flat_100$gTheta!=0),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0),
                   ComBat=ncol(FA_var_COMBAT$Gamma))

Cox.index=data.frame(Flat=mean(Cox_test_Flat,na.rm=TRUE),
                     Normal_SS=mean(Cox_test_Normal,na.rm=TRUE),
                     MOM_SS=mean(Cox_test_MOM,na.rm=TRUE),
                     MOM_SS2=mean(Cox_test_MOM_difInit,na.rm=TRUE),
                     ComBat=mean(Cox_test_COMBAT,na.rm=TRUE))

Cox.index.med=data.frame(Flat=median(Cox_test_Flat,na.rm=TRUE),
                         Normal_SS=median(Cox_test_Normal,na.rm=TRUE),
                         MOM_SS=median(Cox_test_MOM,na.rm=TRUE),
                         MOM_SS2=median(Cox_test_MOM_difInit,na.rm=TRUE),
                         ComBat=median(Cox_test_COMBAT,na.rm=TRUE))

FN.x=data.frame(Flat=norm(X_var_std-
                            (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                          type ="F"),
                Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
                  norm(X_var_std-
                         (Normal_100$Ez%*%t(PostM2(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (Normal_100$Ez%*%t(PostM(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                              type ="F")},
                MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
                  norm(X_var_std-
                         (MOM_100$Ez%*%t(PostM2(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100$Ez%*%t(PostM(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                              type ="F")},
                MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
                  norm(X_var_std-
                         (MOM_100_difInit$Ez%*%t(PostM2(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100_difInit$Ez%*%t(PostM(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                              type ="F")},
                ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

FN.x.NP=data.frame(Flat=norm(X_var_std-
                               (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                             type ="F"),
                   Normal_SS=norm(X_var_std-
                                    (Normal_100$Ez%*%t(Normal_100$M)+cbind(V,B)%*%t(Normal_100$Theta)),
                                  type ="F"),
                   MOM_SS=norm(X_var_std-
                                 (MOM_100$Ez%*%t(MOM_100$M)+cbind(V,B)%*%t(MOM_100$Theta)),
                               type ="F"),
                   MOM_SS2=norm(X_var_std-
                                  (MOM_100_difInit$Ez%*%t(MOM_100_difInit$M)+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                                type ="F"),
                   ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

Fn.x.test=data.frame(Flat=min(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk),
                     Normal_SS=min(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk),
                     MOM_SS=min(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk),
                     MOM_SS2=min(fnMOM100rdifInit,fnMOM100rjkdifInit,fnMOM100nrdifInit,fnMOM100nrjkdifInit),
                     ComBat=mean(FN.test.COMBAT))

Fn.x.test.NP=data.frame(Flat=if((min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW))){
  mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
    mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
    mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)},
  ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

it=data.frame(Flat=Flat_100$iterations,
              Normal_SS=Normal_100$iterations,
              MOM_SS=MOM_100$iterations,
              MOM_SS2=MOM_100_difInit$iterations,
              ComBat=FA_var_COMBAT$niter)

m.hat=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                 Normal_SS=sum(Normal_100$gamma>0.5),
                 MOM_SS=sum(MOM_100$gamma>0.5),
                 MOM_SS2=sum(MOM_100_difInit$gamma>0.5),
                 ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

m.hat.2=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

CVW.output=data.frame(Flat=c(fnFlat100rW,fnFlat100rjkW,fnFlat100nrW,fnFlat100nrjkW,
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      Normal=c(fnNormal100rW,fnNormal100rjkW,fnNormal100nrW,fnNormal100nrjkW,
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM=c(fnMOM100rW,fnMOM100rjkW,fnMOM100nrW,fnMOM100nrjkW,
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      ComBat=rep(mean(FN.test.COMBAT.W),6))

CV.output=data.frame(Flat=c(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk,
                            mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     Normal=c(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk,
                              mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                              mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM=c(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk,
                           mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                           mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                            mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     ComBat=rep(norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"),6))
rownames(CVW.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")
rownames(CV.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")

write.csv(CV.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCV03")
write.csv(CVW.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCVW03")
tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,mhat=m.hat,mhat2=m.hat.2,Cox_mean=Cox.index,Cox_median=Cox.index.med,FN_x=FN.x,FN_x_NP=FN.x.NP,FN_x_test=Fn.x.test,FN_x_test_NP=Fn.x.test.NP,it=it)
round(t(tableFN2),3)
write.csv(t(tableFN2), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V3lun03")

####CV####
set.seed(126)
index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,trunc(n/10),replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}
### MOM
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM")
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nr=mean(FN.CV.BE.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100r=mean(FN.CV.BE.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)) #TRUE

fnMOM100nrW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)) #FALSE

MOM_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)))
#MOM_100_NR=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=FALSE)

ggplot(data = data.frame(MOM_100$Ez),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="MOM") + theme(legend.position="none")

###Normal
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal")
}, .parallel = FALSE)

#Varimax
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=TRUE)
}, .parallel = FALSE)

fnNormal100nr=mean(FN.CV.BE.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100r=mean(FN.CV.BE.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.BE.jk.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.BE.jk.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)) #FALSE

fnNormal100nrW=mean(FN.CV.BE.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.BE.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)) #FALSE

Normal_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)))

###Flat
resultFlat_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat")
}, .parallel = FALSE)

#Varimax
resultFlat_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=TRUE)
}, .parallel = FALSE)

fnFlat100nr=mean(FN.CV.BE.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100r=mean(FN.CV.BE.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjk=mean(FN.CV.BE.jk.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjk=mean(FN.CV.BE.jk.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100r,fnFlat100rjk)<=min(fnFlat100nr,fnFlat100nrjk)) #TRUE

fnFlat100nrW=mean(FN.CV.BE.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rW=mean(FN.CV.BE.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)) #TRUE

Flat_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)))

#Different initiation MOM
init_Normal<-list(theta=Normal_100$Theta,
                  sigma=diag(Normal_100$sigma[,1]),
                  M=Normal_100$M,
                  z=Normal_100$Ez,
                  D=Normal_100$D,
                  p.gamma=Normal_100$gamma,
                  g.theta=Normal_100$gTheta)

resultpMOM_100_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal)
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nrdifInit=mean(FN.CV.BE.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rdifInit=mean(FN.CV.BE.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rdifInit,fnMOM100rjkdifInit)<=min(fnMOM100nrdifInit,fnMOM100nrjkdifInit)) #TRUE

fnMOM100nrWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)) #FALSE

MOM_100_difInit=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)))

####Survival analysis####
# Fit Cox Model
survival_data = data.frame(days2death=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"daystodeath"],
                                                   LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"daystodeath"])),
                           stage=as.factor(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"pathologicstage"],
                                             LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"pathologicstage"])),
                           age=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"yearstobirth"],
                                            LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"yearstobirth"])),
                           status=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"vitalstatus"],
                                               LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"vitalstatus"])))

survival_data$days2death[is.na(survival_data$days2death)]=0
# Kaplan Meier Survival Curve
y_surv <- Surv(survival_data$days2death,survival_data$status)
#MOM
#All
Model_MOM<-data.frame(y=y_surv,MOM_100$Ez[,apply(MOM_100$gamma>.5,2,sum)!=0])
form_MOM <- formula(y ~ .,Model_MOM)
cox_bmt <- coxph(form_MOM,data = Model_MOM)
summary(cox_bmt)$concordance[1]
#CV
y_CV=llply(.data = 1:10, .fun = function(k){
  Surv(survival_data$days2death[-group[[k]]], survival_data$status[-group[[k]]])
}, .parallel = FALSE)
Model_CV_MOM=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV[[k]]$Ez[,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV[[k]]$Ez[,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM[[k]]),data = Model_CV_MOM[[k]])
}, .parallel = FALSE)
Cox_train_MOM<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_MOM)

#Normal
#All
Model_Normal<-data.frame(y=y_surv,Normal_100$Ez[,apply(Normal_100$gamma>.5,2,sum)!=0])
form_Normal <- formula(y ~ .,Model_Normal)
cox_bmt_Normal <- coxph(form_Normal,data = Model_Normal)
summary(cox_bmt_Normal)$concordance[1]
#CV
Model_CV_Normal=llply(.data = 1:10, .fun = function(k){
  if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
    data.frame(y=y_CV[[k]],resultNormal_100_var_CV[[k]]$Ez[,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultNormal_100_CV[[k]]$Ez[,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_Normal=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Normal[[k]]),data = Model_CV_Normal[[k]])
}, .parallel = FALSE)
Cox_train_Normal<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Normal[[k]])$concordance[1]))
#Ez of test
if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_var_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_Normal <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Normal_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Normal)

#Flat
#All
Model_Flat<-data.frame(y=y_surv,Flat_100$Ez[,1:85])
form_Flat <- formula(y ~ .,Model_Flat)
cox_bmt_Flat <- coxph(form_Normal,data = Model_Flat)
summary(cox_bmt_Flat)$concordance[1]
#CV
Model_CV_Flat=llply(.data = 1:10, .fun = function(k){
  if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }else{
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }

}, .parallel = FALSE)
cox_bmt_CV_Flat=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Flat[[k]]),data = Model_CV_Flat[[k]])
}, .parallel = FALSE)
Cox_train_Flat<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Flat[[k]])$concordance[1]))
#Ez of test
if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_var_CV,group,100)
}else{
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_CV,group,100)
}
predictions_CV_Flat_test=lapply(1:10, function(k) predict(cox_bmt_CV_Flat[[k]],data.frame(EZ_test_Flat[[k]])))
Cox_test_Flat <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Flat_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Flat)

#MOM2
Model_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM_difInit[[k]]),data = Model_CV_MOM_difInit[[k]])
}, .parallel = FALSE)
Cox_train_MOM_difInit<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM_difInit[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM_difInit <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test_difInit[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

#COMBAT
#All
Model_COMBAT<-data.frame(y=y_surv,FA_var_COMBAT$Z)
form_COMBAT  <- formula(y ~.,Model_COMBAT)
cox_bmt_COMBAT <- coxph(form_COMBAT,data = Model_COMBAT)
summary(cox_bmt_COMBAT)$concordance[1]
#CV
resultCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(t(combat_edata_2[,-group[[y]]]),17,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultCOMBAT_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_COMBAT[[k]]),data = Model_CV_COMBAT[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV,group)
predictions_CV_COMBAT_test=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT[[k]],data.frame(EZ_test_COMBAT[[k]])))
Cox_test_COMBAT <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_COMBAT)
FN.test.COMBAT<-unlist(lapply(1:10, function(k) norm(t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma),type ="F")))
FN.test.COMBAT.W<-unlist(lapply(1:10, function(k) norm((t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma))%*%diag(1/resultCOMBAT_CV[[k]]$Sigma),type ="F")))

#No correction
Model_NC<-data.frame(y=y_surv,FA_var$Z)
form_NC  <- formula(y ~.,Model_NC)
cox_bmt_NC <- coxph(form_NC,data = Model_NC)
summary(cox_bmt_NC)$concordance[1]
#CV
resultNC_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(X_var_std[-group[[y]],],4,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_NC=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultNC_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_NC=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_NC[[k]]),data = Model_CV_NC[[k]])
}, .parallel = FALSE)
Cox_train_NC<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_NC[[k]])$concordance[1]))
#Ez of test
EZ_test_NC<-Ez.test.COMBAT.ov(X_var_std,resultNC_CV,group)
predictions_CV_NC_test=lapply(1:10, function(k) predict(cox_bmt_CV_NC[[k]],data.frame(EZ_test_NC[[k]])))
Cox_test_NC <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_NC_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

######Tables###
q.sim=data.frame(Flat=100,
                 Normal_SS=100,
                 MOM_SS=100,
                 MOM_SS2=100,
                 ComBat=100)

q.hat.2=data.frame(Flat=sum(Flat_100$gTheta!=0),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0),
                   ComBat=ncol(FA_var_COMBAT$Gamma))

Cox.index=data.frame(Flat=mean(Cox_test_Flat,na.rm=TRUE),
                     Normal_SS=mean(Cox_test_Normal,na.rm=TRUE),
                     MOM_SS=mean(Cox_test_MOM,na.rm=TRUE),
                     MOM_SS2=mean(Cox_test_MOM_difInit,na.rm=TRUE),
                     ComBat=mean(Cox_test_COMBAT,na.rm=TRUE))

Cox.index.med=data.frame(Flat=median(Cox_test_Flat,na.rm=TRUE),
                         Normal_SS=median(Cox_test_Normal,na.rm=TRUE),
                         MOM_SS=median(Cox_test_MOM,na.rm=TRUE),
                         MOM_SS2=median(Cox_test_MOM_difInit,na.rm=TRUE),
                         ComBat=median(Cox_test_COMBAT,na.rm=TRUE))

FN.x=data.frame(Flat=norm(X_var_std-
                            (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                          type ="F"),
                Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
                  norm(X_var_std-
                         (Normal_100$Ez%*%t(PostM2(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (Normal_100$Ez%*%t(PostM(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                              type ="F")},
                MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
                  norm(X_var_std-
                         (MOM_100$Ez%*%t(PostM2(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100$Ez%*%t(PostM(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                              type ="F")},
                MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
                  norm(X_var_std-
                         (MOM_100_difInit$Ez%*%t(PostM2(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100_difInit$Ez%*%t(PostM(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                              type ="F")},
                ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

FN.x.NP=data.frame(Flat=norm(X_var_std-
                               (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                             type ="F"),
                   Normal_SS=norm(X_var_std-
                                    (Normal_100$Ez%*%t(Normal_100$M)+cbind(V,B)%*%t(Normal_100$Theta)),
                                  type ="F"),
                   MOM_SS=norm(X_var_std-
                                 (MOM_100$Ez%*%t(MOM_100$M)+cbind(V,B)%*%t(MOM_100$Theta)),
                               type ="F"),
                   MOM_SS2=norm(X_var_std-
                                  (MOM_100_difInit$Ez%*%t(MOM_100_difInit$M)+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                                type ="F"),
                   ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

Fn.x.test=data.frame(Flat=min(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk),
                     Normal_SS=min(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk),
                     MOM_SS=min(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk),
                     MOM_SS2=min(fnMOM100rdifInit,fnMOM100rjkdifInit,fnMOM100nrdifInit,fnMOM100nrjkdifInit),
                     ComBat=mean(FN.test.COMBAT))

Fn.x.test.NP=data.frame(Flat=if((min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW))){
  mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
    mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
    mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)},
  ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

it=data.frame(Flat=Flat_100$iterations,
              Normal_SS=Normal_100$iterations,
              MOM_SS=MOM_100$iterations,
              MOM_SS2=MOM_100_difInit$iterations,
              ComBat=FA_var_COMBAT$niter)

m.hat=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                 Normal_SS=sum(Normal_100$gamma>0.5),
                 MOM_SS=sum(MOM_100$gamma>0.5),
                 MOM_SS2=sum(MOM_100_difInit$gamma>0.5),
                 ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

m.hat.2=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

CVW.output=data.frame(Flat=c(fnFlat100rW,fnFlat100rjkW,fnFlat100nrW,fnFlat100nrjkW,
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      Normal=c(fnNormal100rW,fnNormal100rjkW,fnNormal100nrW,fnNormal100nrjkW,
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM=c(fnMOM100rW,fnMOM100rjkW,fnMOM100nrW,fnMOM100nrjkW,
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      ComBat=rep(mean(FN.test.COMBAT.W),6))

CV.output=data.frame(Flat=c(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk,
                            mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     Normal=c(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk,
                              mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                              mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM=c(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk,
                           mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                           mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                            mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     ComBat=rep(norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"),6))
rownames(CVW.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")
rownames(CV.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")

write.csv(CV.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCV04")
write.csv(CVW.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCVW04")
tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,mhat=m.hat,mhat2=m.hat.2,Cox_mean=Cox.index,Cox_median=Cox.index.med,FN_x=FN.x,FN_x_NP=FN.x.NP,FN_x_test=Fn.x.test,FN_x_test_NP=Fn.x.test.NP,it=it)
round(t(tableFN2),3)
write.csv(t(tableFN2), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V3lun04")

####CV####
set.seed(127)
index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,trunc(n/10),replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}
### MOM
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM")
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nr=mean(FN.CV.BE.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100r=mean(FN.CV.BE.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)) #TRUE

fnMOM100nrW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)) #FALSE

MOM_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)))
#MOM_100_NR=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=FALSE)

ggplot(data = data.frame(MOM_100$Ez),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="MOM") + theme(legend.position="none")

###Normal
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal")
}, .parallel = FALSE)

#Varimax
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=TRUE)
}, .parallel = FALSE)

fnNormal100nr=mean(FN.CV.BE.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100r=mean(FN.CV.BE.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.BE.jk.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.BE.jk.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)) #FALSE

fnNormal100nrW=mean(FN.CV.BE.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.BE.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)) #FALSE

Normal_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)))

###Flat
resultFlat_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat")
}, .parallel = FALSE)

#Varimax
resultFlat_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=TRUE)
}, .parallel = FALSE)

fnFlat100nr=mean(FN.CV.BE.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100r=mean(FN.CV.BE.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjk=mean(FN.CV.BE.jk.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjk=mean(FN.CV.BE.jk.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100r,fnFlat100rjk)<=min(fnFlat100nr,fnFlat100nrjk)) #TRUE

fnFlat100nrW=mean(FN.CV.BE.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rW=mean(FN.CV.BE.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)) #TRUE

Flat_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)))

#Different initiation MOM
init_Normal<-list(theta=Normal_100$Theta,
                  sigma=diag(Normal_100$sigma[,1]),
                  M=Normal_100$M,
                  z=Normal_100$Ez,
                  D=Normal_100$D,
                  p.gamma=Normal_100$gamma,
                  g.theta=Normal_100$gTheta)

resultpMOM_100_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal)
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nrdifInit=mean(FN.CV.BE.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rdifInit=mean(FN.CV.BE.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rdifInit,fnMOM100rjkdifInit)<=min(fnMOM100nrdifInit,fnMOM100nrjkdifInit)) #TRUE

fnMOM100nrWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)) #FALSE

MOM_100_difInit=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)))

####Survival analysis####
# Fit Cox Model
survival_data = data.frame(days2death=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"daystodeath"],
                                                   LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"daystodeath"])),
                           stage=as.factor(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"pathologicstage"],
                                             LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"pathologicstage"])),
                           age=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"yearstobirth"],
                                            LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"yearstobirth"])),
                           status=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"vitalstatus"],
                                               LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"vitalstatus"])))

survival_data$days2death[is.na(survival_data$days2death)]=0
# Kaplan Meier Survival Curve
y_surv <- Surv(survival_data$days2death,survival_data$status)
#MOM
#All
Model_MOM<-data.frame(y=y_surv,MOM_100$Ez[,apply(MOM_100$gamma>.5,2,sum)!=0])
form_MOM <- formula(y ~ .,Model_MOM)
cox_bmt <- coxph(form_MOM,data = Model_MOM)
summary(cox_bmt)$concordance[1]
#CV
y_CV=llply(.data = 1:10, .fun = function(k){
  Surv(survival_data$days2death[-group[[k]]], survival_data$status[-group[[k]]])
}, .parallel = FALSE)
Model_CV_MOM=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV[[k]]$Ez[,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV[[k]]$Ez[,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM[[k]]),data = Model_CV_MOM[[k]])
}, .parallel = FALSE)
Cox_train_MOM<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_MOM)

#Normal
#All
Model_Normal<-data.frame(y=y_surv,Normal_100$Ez[,apply(Normal_100$gamma>.5,2,sum)!=0])
form_Normal <- formula(y ~ .,Model_Normal)
cox_bmt_Normal <- coxph(form_Normal,data = Model_Normal)
summary(cox_bmt_Normal)$concordance[1]
#CV
Model_CV_Normal=llply(.data = 1:10, .fun = function(k){
  if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
    data.frame(y=y_CV[[k]],resultNormal_100_var_CV[[k]]$Ez[,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultNormal_100_CV[[k]]$Ez[,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_Normal=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Normal[[k]]),data = Model_CV_Normal[[k]])
}, .parallel = FALSE)
Cox_train_Normal<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Normal[[k]])$concordance[1]))
#Ez of test
if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_var_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_Normal <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Normal_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Normal)

#Flat
#All
Model_Flat<-data.frame(y=y_surv,Flat_100$Ez[,1:85])
form_Flat <- formula(y ~ .,Model_Flat)
cox_bmt_Flat <- coxph(form_Normal,data = Model_Flat)
summary(cox_bmt_Flat)$concordance[1]
#CV
Model_CV_Flat=llply(.data = 1:10, .fun = function(k){
  if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }else{
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }

}, .parallel = FALSE)
cox_bmt_CV_Flat=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Flat[[k]]),data = Model_CV_Flat[[k]])
}, .parallel = FALSE)
Cox_train_Flat<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Flat[[k]])$concordance[1]))
#Ez of test
if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_var_CV,group,100)
}else{
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_CV,group,100)
}
predictions_CV_Flat_test=lapply(1:10, function(k) predict(cox_bmt_CV_Flat[[k]],data.frame(EZ_test_Flat[[k]])))
Cox_test_Flat <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Flat_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Flat)

#MOM2
Model_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM_difInit[[k]]),data = Model_CV_MOM_difInit[[k]])
}, .parallel = FALSE)
Cox_train_MOM_difInit<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM_difInit[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM_difInit <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test_difInit[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

#COMBAT
#All
Model_COMBAT<-data.frame(y=y_surv,FA_var_COMBAT$Z)
form_COMBAT  <- formula(y ~.,Model_COMBAT)
cox_bmt_COMBAT <- coxph(form_COMBAT,data = Model_COMBAT)
summary(cox_bmt_COMBAT)$concordance[1]
#CV
resultCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(t(combat_edata_2[,-group[[y]]]),17,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultCOMBAT_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_COMBAT[[k]]),data = Model_CV_COMBAT[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV,group)
predictions_CV_COMBAT_test=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT[[k]],data.frame(EZ_test_COMBAT[[k]])))
Cox_test_COMBAT <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_COMBAT)
FN.test.COMBAT<-unlist(lapply(1:10, function(k) norm(t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma),type ="F")))
FN.test.COMBAT.W<-unlist(lapply(1:10, function(k) norm((t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma))%*%diag(1/resultCOMBAT_CV[[k]]$Sigma),type ="F")))

#No correction
Model_NC<-data.frame(y=y_surv,FA_var$Z)
form_NC  <- formula(y ~.,Model_NC)
cox_bmt_NC <- coxph(form_NC,data = Model_NC)
summary(cox_bmt_NC)$concordance[1]
#CV
resultNC_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(X_var_std[-group[[y]],],4,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_NC=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultNC_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_NC=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_NC[[k]]),data = Model_CV_NC[[k]])
}, .parallel = FALSE)
Cox_train_NC<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_NC[[k]])$concordance[1]))
#Ez of test
EZ_test_NC<-Ez.test.COMBAT.ov(X_var_std,resultNC_CV,group)
predictions_CV_NC_test=lapply(1:10, function(k) predict(cox_bmt_CV_NC[[k]],data.frame(EZ_test_NC[[k]])))
Cox_test_NC <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_NC_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

######Tables###
q.sim=data.frame(Flat=100,
                 Normal_SS=100,
                 MOM_SS=100,
                 MOM_SS2=100,
                 ComBat=100)

q.hat.2=data.frame(Flat=sum(Flat_100$gTheta!=0),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0),
                   ComBat=ncol(FA_var_COMBAT$Gamma))

Cox.index=data.frame(Flat=mean(Cox_test_Flat,na.rm=TRUE),
                     Normal_SS=mean(Cox_test_Normal,na.rm=TRUE),
                     MOM_SS=mean(Cox_test_MOM,na.rm=TRUE),
                     MOM_SS2=mean(Cox_test_MOM_difInit,na.rm=TRUE),
                     ComBat=mean(Cox_test_COMBAT,na.rm=TRUE))

Cox.index.med=data.frame(Flat=median(Cox_test_Flat,na.rm=TRUE),
                         Normal_SS=median(Cox_test_Normal,na.rm=TRUE),
                         MOM_SS=median(Cox_test_MOM,na.rm=TRUE),
                         MOM_SS2=median(Cox_test_MOM_difInit,na.rm=TRUE),
                         ComBat=median(Cox_test_COMBAT,na.rm=TRUE))

FN.x=data.frame(Flat=norm(X_var_std-
                            (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                          type ="F"),
                Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
                  norm(X_var_std-
                         (Normal_100$Ez%*%t(PostM2(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (Normal_100$Ez%*%t(PostM(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                              type ="F")},
                MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
                  norm(X_var_std-
                         (MOM_100$Ez%*%t(PostM2(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100$Ez%*%t(PostM(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                              type ="F")},
                MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
                  norm(X_var_std-
                         (MOM_100_difInit$Ez%*%t(PostM2(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100_difInit$Ez%*%t(PostM(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                              type ="F")},
                ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

FN.x.NP=data.frame(Flat=norm(X_var_std-
                               (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                             type ="F"),
                   Normal_SS=norm(X_var_std-
                                    (Normal_100$Ez%*%t(Normal_100$M)+cbind(V,B)%*%t(Normal_100$Theta)),
                                  type ="F"),
                   MOM_SS=norm(X_var_std-
                                 (MOM_100$Ez%*%t(MOM_100$M)+cbind(V,B)%*%t(MOM_100$Theta)),
                               type ="F"),
                   MOM_SS2=norm(X_var_std-
                                  (MOM_100_difInit$Ez%*%t(MOM_100_difInit$M)+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                                type ="F"),
                   ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

Fn.x.test=data.frame(Flat=min(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk),
                     Normal_SS=min(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk),
                     MOM_SS=min(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk),
                     MOM_SS2=min(fnMOM100rdifInit,fnMOM100rjkdifInit,fnMOM100nrdifInit,fnMOM100nrjkdifInit),
                     ComBat=mean(FN.test.COMBAT))

Fn.x.test.NP=data.frame(Flat=if((min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW))){
  mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
    mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
    mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)},
  ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

it=data.frame(Flat=Flat_100$iterations,
              Normal_SS=Normal_100$iterations,
              MOM_SS=MOM_100$iterations,
              MOM_SS2=MOM_100_difInit$iterations,
              ComBat=FA_var_COMBAT$niter)

m.hat=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                 Normal_SS=sum(Normal_100$gamma>0.5),
                 MOM_SS=sum(MOM_100$gamma>0.5),
                 MOM_SS2=sum(MOM_100_difInit$gamma>0.5),
                 ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

m.hat.2=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

CVW.output=data.frame(Flat=c(fnFlat100rW,fnFlat100rjkW,fnFlat100nrW,fnFlat100nrjkW,
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      Normal=c(fnNormal100rW,fnNormal100rjkW,fnNormal100nrW,fnNormal100nrjkW,
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM=c(fnMOM100rW,fnMOM100rjkW,fnMOM100nrW,fnMOM100nrjkW,
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      ComBat=rep(mean(FN.test.COMBAT.W),6))

CV.output=data.frame(Flat=c(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk,
                            mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     Normal=c(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk,
                              mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                              mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM=c(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk,
                           mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                           mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                            mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     ComBat=rep(norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"),6))
rownames(CVW.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")
rownames(CV.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")

write.csv(CV.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCV05")
write.csv(CVW.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCVW05")
tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,mhat=m.hat,mhat2=m.hat.2,Cox_mean=Cox.index,Cox_median=Cox.index.med,FN_x=FN.x,FN_x_NP=FN.x.NP,FN_x_test=Fn.x.test,FN_x_test_NP=Fn.x.test.NP,it=it)
round(t(tableFN2),3)
write.csv(t(tableFN2), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V3lun05")

####CV####
set.seed(128)
index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,trunc(n/10),replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}
### MOM
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM")
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nr=mean(FN.CV.BE.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100r=mean(FN.CV.BE.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)) #TRUE

fnMOM100nrW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)) #FALSE

MOM_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)))
#MOM_100_NR=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=FALSE)

ggplot(data = data.frame(MOM_100$Ez),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="MOM") + theme(legend.position="none")

###Normal
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal")
}, .parallel = FALSE)

#Varimax
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=TRUE)
}, .parallel = FALSE)

fnNormal100nr=mean(FN.CV.BE.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100r=mean(FN.CV.BE.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.BE.jk.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.BE.jk.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)) #FALSE

fnNormal100nrW=mean(FN.CV.BE.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.BE.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)) #FALSE

Normal_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)))

###Flat
resultFlat_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat")
}, .parallel = FALSE)

#Varimax
resultFlat_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=TRUE)
}, .parallel = FALSE)

fnFlat100nr=mean(FN.CV.BE.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100r=mean(FN.CV.BE.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjk=mean(FN.CV.BE.jk.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjk=mean(FN.CV.BE.jk.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100r,fnFlat100rjk)<=min(fnFlat100nr,fnFlat100nrjk)) #TRUE

fnFlat100nrW=mean(FN.CV.BE.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rW=mean(FN.CV.BE.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)) #TRUE

Flat_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)))

#Different initiation MOM
init_Normal<-list(theta=Normal_100$Theta,
                  sigma=diag(Normal_100$sigma[,1]),
                  M=Normal_100$M,
                  z=Normal_100$Ez,
                  D=Normal_100$D,
                  p.gamma=Normal_100$gamma,
                  g.theta=Normal_100$gTheta)

resultpMOM_100_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal)
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nrdifInit=mean(FN.CV.BE.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rdifInit=mean(FN.CV.BE.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rdifInit,fnMOM100rjkdifInit)<=min(fnMOM100nrdifInit,fnMOM100nrjkdifInit)) #TRUE

fnMOM100nrWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)) #FALSE

MOM_100_difInit=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)))

####Survival analysis####
# Fit Cox Model
survival_data = data.frame(days2death=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"daystodeath"],
                                                   LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"daystodeath"])),
                           stage=as.factor(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"pathologicstage"],
                                             LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"pathologicstage"])),
                           age=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"yearstobirth"],
                                            LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"yearstobirth"])),
                           status=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"vitalstatus"],
                                               LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"vitalstatus"])))

survival_data$days2death[is.na(survival_data$days2death)]=0
# Kaplan Meier Survival Curve
y_surv <- Surv(survival_data$days2death,survival_data$status)
#MOM
#All
Model_MOM<-data.frame(y=y_surv,MOM_100$Ez[,apply(MOM_100$gamma>.5,2,sum)!=0])
form_MOM <- formula(y ~ .,Model_MOM)
cox_bmt <- coxph(form_MOM,data = Model_MOM)
summary(cox_bmt)$concordance[1]
#CV
y_CV=llply(.data = 1:10, .fun = function(k){
  Surv(survival_data$days2death[-group[[k]]], survival_data$status[-group[[k]]])
}, .parallel = FALSE)
Model_CV_MOM=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV[[k]]$Ez[,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV[[k]]$Ez[,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM[[k]]),data = Model_CV_MOM[[k]])
}, .parallel = FALSE)
Cox_train_MOM<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_MOM)

#Normal
#All
Model_Normal<-data.frame(y=y_surv,Normal_100$Ez[,apply(Normal_100$gamma>.5,2,sum)!=0])
form_Normal <- formula(y ~ .,Model_Normal)
cox_bmt_Normal <- coxph(form_Normal,data = Model_Normal)
summary(cox_bmt_Normal)$concordance[1]
#CV
Model_CV_Normal=llply(.data = 1:10, .fun = function(k){
  if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
    data.frame(y=y_CV[[k]],resultNormal_100_var_CV[[k]]$Ez[,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultNormal_100_CV[[k]]$Ez[,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_Normal=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Normal[[k]]),data = Model_CV_Normal[[k]])
}, .parallel = FALSE)
Cox_train_Normal<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Normal[[k]])$concordance[1]))
#Ez of test
if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_var_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_Normal <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Normal_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Normal)

#Flat
#All
Model_Flat<-data.frame(y=y_surv,Flat_100$Ez[,1:85])
form_Flat <- formula(y ~ .,Model_Flat)
cox_bmt_Flat <- coxph(form_Normal,data = Model_Flat)
summary(cox_bmt_Flat)$concordance[1]
#CV
Model_CV_Flat=llply(.data = 1:10, .fun = function(k){
  if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }else{
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }

}, .parallel = FALSE)
cox_bmt_CV_Flat=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Flat[[k]]),data = Model_CV_Flat[[k]])
}, .parallel = FALSE)
Cox_train_Flat<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Flat[[k]])$concordance[1]))
#Ez of test
if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_var_CV,group,100)
}else{
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_CV,group,100)
}
predictions_CV_Flat_test=lapply(1:10, function(k) predict(cox_bmt_CV_Flat[[k]],data.frame(EZ_test_Flat[[k]])))
Cox_test_Flat <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Flat_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Flat)

#MOM2
Model_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM_difInit[[k]]),data = Model_CV_MOM_difInit[[k]])
}, .parallel = FALSE)
Cox_train_MOM_difInit<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM_difInit[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM_difInit <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test_difInit[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

#COMBAT
#All
Model_COMBAT<-data.frame(y=y_surv,FA_var_COMBAT$Z)
form_COMBAT  <- formula(y ~.,Model_COMBAT)
cox_bmt_COMBAT <- coxph(form_COMBAT,data = Model_COMBAT)
summary(cox_bmt_COMBAT)$concordance[1]
#CV
resultCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(t(combat_edata_2[,-group[[y]]]),17,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultCOMBAT_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_COMBAT[[k]]),data = Model_CV_COMBAT[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV,group)
predictions_CV_COMBAT_test=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT[[k]],data.frame(EZ_test_COMBAT[[k]])))
Cox_test_COMBAT <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_COMBAT)
FN.test.COMBAT<-unlist(lapply(1:10, function(k) norm(t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma),type ="F")))
FN.test.COMBAT.W<-unlist(lapply(1:10, function(k) norm((t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma))%*%diag(1/resultCOMBAT_CV[[k]]$Sigma),type ="F")))

#No correction
Model_NC<-data.frame(y=y_surv,FA_var$Z)
form_NC  <- formula(y ~.,Model_NC)
cox_bmt_NC <- coxph(form_NC,data = Model_NC)
summary(cox_bmt_NC)$concordance[1]
#CV
resultNC_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(X_var_std[-group[[y]],],4,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_NC=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultNC_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_NC=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_NC[[k]]),data = Model_CV_NC[[k]])
}, .parallel = FALSE)
Cox_train_NC<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_NC[[k]])$concordance[1]))
#Ez of test
EZ_test_NC<-Ez.test.COMBAT.ov(X_var_std,resultNC_CV,group)
predictions_CV_NC_test=lapply(1:10, function(k) predict(cox_bmt_CV_NC[[k]],data.frame(EZ_test_NC[[k]])))
Cox_test_NC <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_NC_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

######Tables###
q.sim=data.frame(Flat=100,
                 Normal_SS=100,
                 MOM_SS=100,
                 MOM_SS2=100,
                 ComBat=100)

q.hat.2=data.frame(Flat=sum(Flat_100$gTheta!=0),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0),
                   ComBat=ncol(FA_var_COMBAT$Gamma))

Cox.index=data.frame(Flat=mean(Cox_test_Flat,na.rm=TRUE),
                     Normal_SS=mean(Cox_test_Normal,na.rm=TRUE),
                     MOM_SS=mean(Cox_test_MOM,na.rm=TRUE),
                     MOM_SS2=mean(Cox_test_MOM_difInit,na.rm=TRUE),
                     ComBat=mean(Cox_test_COMBAT,na.rm=TRUE))

Cox.index.med=data.frame(Flat=median(Cox_test_Flat,na.rm=TRUE),
                         Normal_SS=median(Cox_test_Normal,na.rm=TRUE),
                         MOM_SS=median(Cox_test_MOM,na.rm=TRUE),
                         MOM_SS2=median(Cox_test_MOM_difInit,na.rm=TRUE),
                         ComBat=median(Cox_test_COMBAT,na.rm=TRUE))

FN.x=data.frame(Flat=norm(X_var_std-
                            (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                          type ="F"),
                Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
                  norm(X_var_std-
                         (Normal_100$Ez%*%t(PostM2(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (Normal_100$Ez%*%t(PostM(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                              type ="F")},
                MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
                  norm(X_var_std-
                         (MOM_100$Ez%*%t(PostM2(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100$Ez%*%t(PostM(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                              type ="F")},
                MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
                  norm(X_var_std-
                         (MOM_100_difInit$Ez%*%t(PostM2(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100_difInit$Ez%*%t(PostM(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                              type ="F")},
                ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

FN.x.NP=data.frame(Flat=norm(X_var_std-
                               (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                             type ="F"),
                   Normal_SS=norm(X_var_std-
                                    (Normal_100$Ez%*%t(Normal_100$M)+cbind(V,B)%*%t(Normal_100$Theta)),
                                  type ="F"),
                   MOM_SS=norm(X_var_std-
                                 (MOM_100$Ez%*%t(MOM_100$M)+cbind(V,B)%*%t(MOM_100$Theta)),
                               type ="F"),
                   MOM_SS2=norm(X_var_std-
                                  (MOM_100_difInit$Ez%*%t(MOM_100_difInit$M)+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                                type ="F"),
                   ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

Fn.x.test=data.frame(Flat=min(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk),
                     Normal_SS=min(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk),
                     MOM_SS=min(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk),
                     MOM_SS2=min(fnMOM100rdifInit,fnMOM100rjkdifInit,fnMOM100nrdifInit,fnMOM100nrjkdifInit),
                     ComBat=mean(FN.test.COMBAT))

Fn.x.test.NP=data.frame(Flat=if((min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW))){
  mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
    mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
    mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)},
  ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

it=data.frame(Flat=Flat_100$iterations,
              Normal_SS=Normal_100$iterations,
              MOM_SS=MOM_100$iterations,
              MOM_SS2=MOM_100_difInit$iterations,
              ComBat=FA_var_COMBAT$niter)

m.hat=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                 Normal_SS=sum(Normal_100$gamma>0.5),
                 MOM_SS=sum(MOM_100$gamma>0.5),
                 MOM_SS2=sum(MOM_100_difInit$gamma>0.5),
                 ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

m.hat.2=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

CVW.output=data.frame(Flat=c(fnFlat100rW,fnFlat100rjkW,fnFlat100nrW,fnFlat100nrjkW,
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      Normal=c(fnNormal100rW,fnNormal100rjkW,fnNormal100nrW,fnNormal100nrjkW,
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM=c(fnMOM100rW,fnMOM100rjkW,fnMOM100nrW,fnMOM100nrjkW,
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      ComBat=rep(mean(FN.test.COMBAT.W),6))

CV.output=data.frame(Flat=c(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk,
                            mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     Normal=c(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk,
                              mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                              mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM=c(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk,
                           mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                           mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                            mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     ComBat=rep(norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"),6))
rownames(CVW.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")
rownames(CV.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")

write.csv(CV.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCV06")
write.csv(CVW.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCVW06")
tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,mhat=m.hat,mhat2=m.hat.2,Cox_mean=Cox.index,Cox_median=Cox.index.med,FN_x=FN.x,FN_x_NP=FN.x.NP,FN_x_test=Fn.x.test,FN_x_test_NP=Fn.x.test.NP,it=it)
round(t(tableFN2),3)
write.csv(t(tableFN2), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V3lun06")

####CV####
set.seed(129)
index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,trunc(n/10),replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}
### MOM
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM")
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nr=mean(FN.CV.BE.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100r=mean(FN.CV.BE.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)) #TRUE

fnMOM100nrW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)) #FALSE

MOM_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)))
#MOM_100_NR=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=FALSE)

ggplot(data = data.frame(MOM_100$Ez),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="MOM") + theme(legend.position="none")

###Normal
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal")
}, .parallel = FALSE)

#Varimax
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=TRUE)
}, .parallel = FALSE)

fnNormal100nr=mean(FN.CV.BE.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100r=mean(FN.CV.BE.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.BE.jk.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.BE.jk.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)) #FALSE

fnNormal100nrW=mean(FN.CV.BE.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.BE.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)) #FALSE

Normal_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)))

###Flat
resultFlat_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat")
}, .parallel = FALSE)

#Varimax
resultFlat_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=TRUE)
}, .parallel = FALSE)

fnFlat100nr=mean(FN.CV.BE.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100r=mean(FN.CV.BE.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjk=mean(FN.CV.BE.jk.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjk=mean(FN.CV.BE.jk.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100r,fnFlat100rjk)<=min(fnFlat100nr,fnFlat100nrjk)) #TRUE

fnFlat100nrW=mean(FN.CV.BE.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rW=mean(FN.CV.BE.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)) #TRUE

Flat_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)))

#Different initiation MOM
init_Normal<-list(theta=Normal_100$Theta,
                  sigma=diag(Normal_100$sigma[,1]),
                  M=Normal_100$M,
                  z=Normal_100$Ez,
                  D=Normal_100$D,
                  p.gamma=Normal_100$gamma,
                  g.theta=Normal_100$gTheta)

resultpMOM_100_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal)
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nrdifInit=mean(FN.CV.BE.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rdifInit=mean(FN.CV.BE.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rdifInit,fnMOM100rjkdifInit)<=min(fnMOM100nrdifInit,fnMOM100nrjkdifInit)) #TRUE

fnMOM100nrWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)) #FALSE

MOM_100_difInit=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)))

####Survival analysis####
# Fit Cox Model
survival_data = data.frame(days2death=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"daystodeath"],
                                                   LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"daystodeath"])),
                           stage=as.factor(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"pathologicstage"],
                                             LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"pathologicstage"])),
                           age=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"yearstobirth"],
                                            LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"yearstobirth"])),
                           status=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"vitalstatus"],
                                               LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"vitalstatus"])))

survival_data$days2death[is.na(survival_data$days2death)]=0
# Kaplan Meier Survival Curve
y_surv <- Surv(survival_data$days2death,survival_data$status)
#MOM
#All
Model_MOM<-data.frame(y=y_surv,MOM_100$Ez[,apply(MOM_100$gamma>.5,2,sum)!=0])
form_MOM <- formula(y ~ .,Model_MOM)
cox_bmt <- coxph(form_MOM,data = Model_MOM)
summary(cox_bmt)$concordance[1]
#CV
y_CV=llply(.data = 1:10, .fun = function(k){
  Surv(survival_data$days2death[-group[[k]]], survival_data$status[-group[[k]]])
}, .parallel = FALSE)
Model_CV_MOM=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV[[k]]$Ez[,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV[[k]]$Ez[,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM[[k]]),data = Model_CV_MOM[[k]])
}, .parallel = FALSE)
Cox_train_MOM<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_MOM)

#Normal
#All
Model_Normal<-data.frame(y=y_surv,Normal_100$Ez[,apply(Normal_100$gamma>.5,2,sum)!=0])
form_Normal <- formula(y ~ .,Model_Normal)
cox_bmt_Normal <- coxph(form_Normal,data = Model_Normal)
summary(cox_bmt_Normal)$concordance[1]
#CV
Model_CV_Normal=llply(.data = 1:10, .fun = function(k){
  if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
    data.frame(y=y_CV[[k]],resultNormal_100_var_CV[[k]]$Ez[,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultNormal_100_CV[[k]]$Ez[,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_Normal=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Normal[[k]]),data = Model_CV_Normal[[k]])
}, .parallel = FALSE)
Cox_train_Normal<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Normal[[k]])$concordance[1]))
#Ez of test
if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_var_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_Normal <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Normal_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Normal)

#Flat
#All
Model_Flat<-data.frame(y=y_surv,Flat_100$Ez[,1:85])
form_Flat <- formula(y ~ .,Model_Flat)
cox_bmt_Flat <- coxph(form_Normal,data = Model_Flat)
summary(cox_bmt_Flat)$concordance[1]
#CV
Model_CV_Flat=llply(.data = 1:10, .fun = function(k){
  if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }else{
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }

}, .parallel = FALSE)
cox_bmt_CV_Flat=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Flat[[k]]),data = Model_CV_Flat[[k]])
}, .parallel = FALSE)
Cox_train_Flat<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Flat[[k]])$concordance[1]))
#Ez of test
if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_var_CV,group,100)
}else{
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_CV,group,100)
}
predictions_CV_Flat_test=lapply(1:10, function(k) predict(cox_bmt_CV_Flat[[k]],data.frame(EZ_test_Flat[[k]])))
Cox_test_Flat <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Flat_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Flat)

#MOM2
Model_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM_difInit[[k]]),data = Model_CV_MOM_difInit[[k]])
}, .parallel = FALSE)
Cox_train_MOM_difInit<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM_difInit[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM_difInit <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test_difInit[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

#COMBAT
#All
Model_COMBAT<-data.frame(y=y_surv,FA_var_COMBAT$Z)
form_COMBAT  <- formula(y ~.,Model_COMBAT)
cox_bmt_COMBAT <- coxph(form_COMBAT,data = Model_COMBAT)
summary(cox_bmt_COMBAT)$concordance[1]
#CV
resultCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(t(combat_edata_2[,-group[[y]]]),17,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultCOMBAT_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_COMBAT[[k]]),data = Model_CV_COMBAT[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV,group)
predictions_CV_COMBAT_test=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT[[k]],data.frame(EZ_test_COMBAT[[k]])))
Cox_test_COMBAT <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_COMBAT)
FN.test.COMBAT<-unlist(lapply(1:10, function(k) norm(t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma),type ="F")))
FN.test.COMBAT.W<-unlist(lapply(1:10, function(k) norm((t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma))%*%diag(1/resultCOMBAT_CV[[k]]$Sigma),type ="F")))

#No correction
Model_NC<-data.frame(y=y_surv,FA_var$Z)
form_NC  <- formula(y ~.,Model_NC)
cox_bmt_NC <- coxph(form_NC,data = Model_NC)
summary(cox_bmt_NC)$concordance[1]
#CV
resultNC_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(X_var_std[-group[[y]],],4,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_NC=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultNC_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_NC=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_NC[[k]]),data = Model_CV_NC[[k]])
}, .parallel = FALSE)
Cox_train_NC<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_NC[[k]])$concordance[1]))
#Ez of test
EZ_test_NC<-Ez.test.COMBAT.ov(X_var_std,resultNC_CV,group)
predictions_CV_NC_test=lapply(1:10, function(k) predict(cox_bmt_CV_NC[[k]],data.frame(EZ_test_NC[[k]])))
Cox_test_NC <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_NC_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

######Tables###
q.sim=data.frame(Flat=100,
                 Normal_SS=100,
                 MOM_SS=100,
                 MOM_SS2=100,
                 ComBat=100)

q.hat.2=data.frame(Flat=sum(Flat_100$gTheta!=0),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0),
                   ComBat=ncol(FA_var_COMBAT$Gamma))

Cox.index=data.frame(Flat=mean(Cox_test_Flat,na.rm=TRUE),
                     Normal_SS=mean(Cox_test_Normal,na.rm=TRUE),
                     MOM_SS=mean(Cox_test_MOM,na.rm=TRUE),
                     MOM_SS2=mean(Cox_test_MOM_difInit,na.rm=TRUE),
                     ComBat=mean(Cox_test_COMBAT,na.rm=TRUE))

Cox.index.med=data.frame(Flat=median(Cox_test_Flat,na.rm=TRUE),
                         Normal_SS=median(Cox_test_Normal,na.rm=TRUE),
                         MOM_SS=median(Cox_test_MOM,na.rm=TRUE),
                         MOM_SS2=median(Cox_test_MOM_difInit,na.rm=TRUE),
                         ComBat=median(Cox_test_COMBAT,na.rm=TRUE))

FN.x=data.frame(Flat=norm(X_var_std-
                            (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                          type ="F"),
                Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
                  norm(X_var_std-
                         (Normal_100$Ez%*%t(PostM2(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (Normal_100$Ez%*%t(PostM(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                              type ="F")},
                MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
                  norm(X_var_std-
                         (MOM_100$Ez%*%t(PostM2(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100$Ez%*%t(PostM(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                              type ="F")},
                MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
                  norm(X_var_std-
                         (MOM_100_difInit$Ez%*%t(PostM2(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100_difInit$Ez%*%t(PostM(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                              type ="F")},
                ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

FN.x.NP=data.frame(Flat=norm(X_var_std-
                               (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                             type ="F"),
                   Normal_SS=norm(X_var_std-
                                    (Normal_100$Ez%*%t(Normal_100$M)+cbind(V,B)%*%t(Normal_100$Theta)),
                                  type ="F"),
                   MOM_SS=norm(X_var_std-
                                 (MOM_100$Ez%*%t(MOM_100$M)+cbind(V,B)%*%t(MOM_100$Theta)),
                               type ="F"),
                   MOM_SS2=norm(X_var_std-
                                  (MOM_100_difInit$Ez%*%t(MOM_100_difInit$M)+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                                type ="F"),
                   ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

Fn.x.test=data.frame(Flat=min(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk),
                     Normal_SS=min(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk),
                     MOM_SS=min(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk),
                     MOM_SS2=min(fnMOM100rdifInit,fnMOM100rjkdifInit,fnMOM100nrdifInit,fnMOM100nrjkdifInit),
                     ComBat=mean(FN.test.COMBAT))

Fn.x.test.NP=data.frame(Flat=if((min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW))){
  mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
    mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
    mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)},
  ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

it=data.frame(Flat=Flat_100$iterations,
              Normal_SS=Normal_100$iterations,
              MOM_SS=MOM_100$iterations,
              MOM_SS2=MOM_100_difInit$iterations,
              ComBat=FA_var_COMBAT$niter)

m.hat=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                 Normal_SS=sum(Normal_100$gamma>0.5),
                 MOM_SS=sum(MOM_100$gamma>0.5),
                 MOM_SS2=sum(MOM_100_difInit$gamma>0.5),
                 ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

m.hat.2=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

CVW.output=data.frame(Flat=c(fnFlat100rW,fnFlat100rjkW,fnFlat100nrW,fnFlat100nrjkW,
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      Normal=c(fnNormal100rW,fnNormal100rjkW,fnNormal100nrW,fnNormal100nrjkW,
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM=c(fnMOM100rW,fnMOM100rjkW,fnMOM100nrW,fnMOM100nrjkW,
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      ComBat=rep(mean(FN.test.COMBAT.W),6))

CV.output=data.frame(Flat=c(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk,
                            mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     Normal=c(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk,
                              mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                              mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM=c(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk,
                           mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                           mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                            mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     ComBat=rep(norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"),6))
rownames(CVW.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")
rownames(CV.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")

write.csv(CV.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCV07")
write.csv(CVW.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCVW07")
tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,mhat=m.hat,mhat2=m.hat.2,Cox_mean=Cox.index,Cox_median=Cox.index.med,FN_x=FN.x,FN_x_NP=FN.x.NP,FN_x_test=Fn.x.test,FN_x_test_NP=Fn.x.test.NP,it=it)
round(t(tableFN2),3)
write.csv(t(tableFN2), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V3lun07")

####CV####
set.seed(130)
index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,trunc(n/10),replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}
### MOM
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM")
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nr=mean(FN.CV.BE.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100r=mean(FN.CV.BE.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)) #TRUE

fnMOM100nrW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)) #FALSE

MOM_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)))
#MOM_100_NR=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=FALSE)

ggplot(data = data.frame(MOM_100$Ez),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="MOM") + theme(legend.position="none")

###Normal
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal")
}, .parallel = FALSE)

#Varimax
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=TRUE)
}, .parallel = FALSE)

fnNormal100nr=mean(FN.CV.BE.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100r=mean(FN.CV.BE.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.BE.jk.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.BE.jk.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)) #FALSE

fnNormal100nrW=mean(FN.CV.BE.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.BE.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)) #FALSE

Normal_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)))

###Flat
resultFlat_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat")
}, .parallel = FALSE)

#Varimax
resultFlat_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=TRUE)
}, .parallel = FALSE)

fnFlat100nr=mean(FN.CV.BE.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100r=mean(FN.CV.BE.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjk=mean(FN.CV.BE.jk.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjk=mean(FN.CV.BE.jk.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100r,fnFlat100rjk)<=min(fnFlat100nr,fnFlat100nrjk)) #TRUE

fnFlat100nrW=mean(FN.CV.BE.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rW=mean(FN.CV.BE.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)) #TRUE

Flat_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)))

#Different initiation MOM
init_Normal<-list(theta=Normal_100$Theta,
                  sigma=diag(Normal_100$sigma[,1]),
                  M=Normal_100$M,
                  z=Normal_100$Ez,
                  D=Normal_100$D,
                  p.gamma=Normal_100$gamma,
                  g.theta=Normal_100$gTheta)

resultpMOM_100_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal)
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nrdifInit=mean(FN.CV.BE.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rdifInit=mean(FN.CV.BE.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rdifInit,fnMOM100rjkdifInit)<=min(fnMOM100nrdifInit,fnMOM100nrjkdifInit)) #TRUE

fnMOM100nrWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)) #FALSE

MOM_100_difInit=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)))

####Survival analysis####
# Fit Cox Model
survival_data = data.frame(days2death=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"daystodeath"],
                                                   LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"daystodeath"])),
                           stage=as.factor(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"pathologicstage"],
                                             LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"pathologicstage"])),
                           age=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"yearstobirth"],
                                            LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"yearstobirth"])),
                           status=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"vitalstatus"],
                                               LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"vitalstatus"])))

survival_data$days2death[is.na(survival_data$days2death)]=0
# Kaplan Meier Survival Curve
y_surv <- Surv(survival_data$days2death,survival_data$status)
#MOM
#All
Model_MOM<-data.frame(y=y_surv,MOM_100$Ez[,apply(MOM_100$gamma>.5,2,sum)!=0])
form_MOM <- formula(y ~ .,Model_MOM)
cox_bmt <- coxph(form_MOM,data = Model_MOM)
summary(cox_bmt)$concordance[1]
#CV
y_CV=llply(.data = 1:10, .fun = function(k){
  Surv(survival_data$days2death[-group[[k]]], survival_data$status[-group[[k]]])
}, .parallel = FALSE)
Model_CV_MOM=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV[[k]]$Ez[,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV[[k]]$Ez[,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM[[k]]),data = Model_CV_MOM[[k]])
}, .parallel = FALSE)
Cox_train_MOM<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_MOM)

#Normal
#All
Model_Normal<-data.frame(y=y_surv,Normal_100$Ez[,apply(Normal_100$gamma>.5,2,sum)!=0])
form_Normal <- formula(y ~ .,Model_Normal)
cox_bmt_Normal <- coxph(form_Normal,data = Model_Normal)
summary(cox_bmt_Normal)$concordance[1]
#CV
Model_CV_Normal=llply(.data = 1:10, .fun = function(k){
  if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
    data.frame(y=y_CV[[k]],resultNormal_100_var_CV[[k]]$Ez[,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultNormal_100_CV[[k]]$Ez[,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_Normal=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Normal[[k]]),data = Model_CV_Normal[[k]])
}, .parallel = FALSE)
Cox_train_Normal<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Normal[[k]])$concordance[1]))
#Ez of test
if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_var_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_Normal <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Normal_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Normal)

#Flat
#All
Model_Flat<-data.frame(y=y_surv,Flat_100$Ez[,1:85])
form_Flat <- formula(y ~ .,Model_Flat)
cox_bmt_Flat <- coxph(form_Normal,data = Model_Flat)
summary(cox_bmt_Flat)$concordance[1]
#CV
Model_CV_Flat=llply(.data = 1:10, .fun = function(k){
  if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }else{
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }

}, .parallel = FALSE)
cox_bmt_CV_Flat=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Flat[[k]]),data = Model_CV_Flat[[k]])
}, .parallel = FALSE)
Cox_train_Flat<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Flat[[k]])$concordance[1]))
#Ez of test
if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_var_CV,group,100)
}else{
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_CV,group,100)
}
predictions_CV_Flat_test=lapply(1:10, function(k) predict(cox_bmt_CV_Flat[[k]],data.frame(EZ_test_Flat[[k]])))
Cox_test_Flat <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Flat_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Flat)

#MOM2
Model_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM_difInit[[k]]),data = Model_CV_MOM_difInit[[k]])
}, .parallel = FALSE)
Cox_train_MOM_difInit<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM_difInit[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM_difInit <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test_difInit[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

#COMBAT
#All
Model_COMBAT<-data.frame(y=y_surv,FA_var_COMBAT$Z)
form_COMBAT  <- formula(y ~.,Model_COMBAT)
cox_bmt_COMBAT <- coxph(form_COMBAT,data = Model_COMBAT)
summary(cox_bmt_COMBAT)$concordance[1]
#CV
resultCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(t(combat_edata_2[,-group[[y]]]),17,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultCOMBAT_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_COMBAT[[k]]),data = Model_CV_COMBAT[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV,group)
predictions_CV_COMBAT_test=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT[[k]],data.frame(EZ_test_COMBAT[[k]])))
Cox_test_COMBAT <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_COMBAT)
FN.test.COMBAT<-unlist(lapply(1:10, function(k) norm(t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma),type ="F")))
FN.test.COMBAT.W<-unlist(lapply(1:10, function(k) norm((t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma))%*%diag(1/resultCOMBAT_CV[[k]]$Sigma),type ="F")))

#No correction
Model_NC<-data.frame(y=y_surv,FA_var$Z)
form_NC  <- formula(y ~.,Model_NC)
cox_bmt_NC <- coxph(form_NC,data = Model_NC)
summary(cox_bmt_NC)$concordance[1]
#CV
resultNC_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(X_var_std[-group[[y]],],4,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_NC=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultNC_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_NC=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_NC[[k]]),data = Model_CV_NC[[k]])
}, .parallel = FALSE)
Cox_train_NC<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_NC[[k]])$concordance[1]))
#Ez of test
EZ_test_NC<-Ez.test.COMBAT.ov(X_var_std,resultNC_CV,group)
predictions_CV_NC_test=lapply(1:10, function(k) predict(cox_bmt_CV_NC[[k]],data.frame(EZ_test_NC[[k]])))
Cox_test_NC <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_NC_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

######Tables###
q.sim=data.frame(Flat=100,
                 Normal_SS=100,
                 MOM_SS=100,
                 MOM_SS2=100,
                 ComBat=100)

q.hat.2=data.frame(Flat=sum(Flat_100$gTheta!=0),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0),
                   ComBat=ncol(FA_var_COMBAT$Gamma))

Cox.index=data.frame(Flat=mean(Cox_test_Flat,na.rm=TRUE),
                     Normal_SS=mean(Cox_test_Normal,na.rm=TRUE),
                     MOM_SS=mean(Cox_test_MOM,na.rm=TRUE),
                     MOM_SS2=mean(Cox_test_MOM_difInit,na.rm=TRUE),
                     ComBat=mean(Cox_test_COMBAT,na.rm=TRUE))

Cox.index.med=data.frame(Flat=median(Cox_test_Flat,na.rm=TRUE),
                         Normal_SS=median(Cox_test_Normal,na.rm=TRUE),
                         MOM_SS=median(Cox_test_MOM,na.rm=TRUE),
                         MOM_SS2=median(Cox_test_MOM_difInit,na.rm=TRUE),
                         ComBat=median(Cox_test_COMBAT,na.rm=TRUE))

FN.x=data.frame(Flat=norm(X_var_std-
                            (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                          type ="F"),
                Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
                  norm(X_var_std-
                         (Normal_100$Ez%*%t(PostM2(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (Normal_100$Ez%*%t(PostM(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                              type ="F")},
                MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
                  norm(X_var_std-
                         (MOM_100$Ez%*%t(PostM2(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100$Ez%*%t(PostM(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                              type ="F")},
                MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
                  norm(X_var_std-
                         (MOM_100_difInit$Ez%*%t(PostM2(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100_difInit$Ez%*%t(PostM(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                              type ="F")},
                ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

FN.x.NP=data.frame(Flat=norm(X_var_std-
                               (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                             type ="F"),
                   Normal_SS=norm(X_var_std-
                                    (Normal_100$Ez%*%t(Normal_100$M)+cbind(V,B)%*%t(Normal_100$Theta)),
                                  type ="F"),
                   MOM_SS=norm(X_var_std-
                                 (MOM_100$Ez%*%t(MOM_100$M)+cbind(V,B)%*%t(MOM_100$Theta)),
                               type ="F"),
                   MOM_SS2=norm(X_var_std-
                                  (MOM_100_difInit$Ez%*%t(MOM_100_difInit$M)+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                                type ="F"),
                   ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

Fn.x.test=data.frame(Flat=min(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk),
                     Normal_SS=min(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk),
                     MOM_SS=min(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk),
                     MOM_SS2=min(fnMOM100rdifInit,fnMOM100rjkdifInit,fnMOM100nrdifInit,fnMOM100nrjkdifInit),
                     ComBat=mean(FN.test.COMBAT))

Fn.x.test.NP=data.frame(Flat=if((min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW))){
  mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
    mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
    mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)},
  ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

it=data.frame(Flat=Flat_100$iterations,
              Normal_SS=Normal_100$iterations,
              MOM_SS=MOM_100$iterations,
              MOM_SS2=MOM_100_difInit$iterations,
              ComBat=FA_var_COMBAT$niter)

m.hat=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                 Normal_SS=sum(Normal_100$gamma>0.5),
                 MOM_SS=sum(MOM_100$gamma>0.5),
                 MOM_SS2=sum(MOM_100_difInit$gamma>0.5),
                 ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

m.hat.2=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

CVW.output=data.frame(Flat=c(fnFlat100rW,fnFlat100rjkW,fnFlat100nrW,fnFlat100nrjkW,
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      Normal=c(fnNormal100rW,fnNormal100rjkW,fnNormal100nrW,fnNormal100nrjkW,
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM=c(fnMOM100rW,fnMOM100rjkW,fnMOM100nrW,fnMOM100nrjkW,
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      ComBat=rep(mean(FN.test.COMBAT.W),6))

CV.output=data.frame(Flat=c(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk,
                            mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     Normal=c(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk,
                              mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                              mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM=c(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk,
                           mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                           mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                            mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     ComBat=rep(norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"),6))
rownames(CVW.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")
rownames(CV.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")

write.csv(CV.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCV08")
write.csv(CVW.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCVW08")
tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,mhat=m.hat,mhat2=m.hat.2,Cox_mean=Cox.index,Cox_median=Cox.index.med,FN_x=FN.x,FN_x_NP=FN.x.NP,FN_x_test=Fn.x.test,FN_x_test_NP=Fn.x.test.NP,it=it)
round(t(tableFN2),3)
write.csv(t(tableFN2), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V3lun08")

####CV####
set.seed(131)
index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,trunc(n/10),replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}
### MOM
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM")
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nr=mean(FN.CV.BE.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100r=mean(FN.CV.BE.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)) #TRUE

fnMOM100nrW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)) #FALSE

MOM_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)))
#MOM_100_NR=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=FALSE)

ggplot(data = data.frame(MOM_100$Ez),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="MOM") + theme(legend.position="none")

###Normal
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal")
}, .parallel = FALSE)

#Varimax
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=TRUE)
}, .parallel = FALSE)

fnNormal100nr=mean(FN.CV.BE.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100r=mean(FN.CV.BE.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.BE.jk.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.BE.jk.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)) #FALSE

fnNormal100nrW=mean(FN.CV.BE.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.BE.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)) #FALSE

Normal_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)))

###Flat
resultFlat_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat")
}, .parallel = FALSE)

#Varimax
resultFlat_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=TRUE)
}, .parallel = FALSE)

fnFlat100nr=mean(FN.CV.BE.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100r=mean(FN.CV.BE.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjk=mean(FN.CV.BE.jk.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjk=mean(FN.CV.BE.jk.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100r,fnFlat100rjk)<=min(fnFlat100nr,fnFlat100nrjk)) #TRUE

fnFlat100nrW=mean(FN.CV.BE.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rW=mean(FN.CV.BE.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)) #TRUE

Flat_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)))

#Different initiation MOM
init_Normal<-list(theta=Normal_100$Theta,
                  sigma=diag(Normal_100$sigma[,1]),
                  M=Normal_100$M,
                  z=Normal_100$Ez,
                  D=Normal_100$D,
                  p.gamma=Normal_100$gamma,
                  g.theta=Normal_100$gTheta)

resultpMOM_100_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal)
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nrdifInit=mean(FN.CV.BE.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rdifInit=mean(FN.CV.BE.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rdifInit,fnMOM100rjkdifInit)<=min(fnMOM100nrdifInit,fnMOM100nrjkdifInit)) #TRUE

fnMOM100nrWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)) #FALSE

MOM_100_difInit=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)))

####Survival analysis####
# Fit Cox Model
survival_data = data.frame(days2death=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"daystodeath"],
                                                   LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"daystodeath"])),
                           stage=as.factor(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"pathologicstage"],
                                             LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"pathologicstage"])),
                           age=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"yearstobirth"],
                                            LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"yearstobirth"])),
                           status=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"vitalstatus"],
                                               LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"vitalstatus"])))

survival_data$days2death[is.na(survival_data$days2death)]=0
# Kaplan Meier Survival Curve
y_surv <- Surv(survival_data$days2death,survival_data$status)
#MOM
#All
Model_MOM<-data.frame(y=y_surv,MOM_100$Ez[,apply(MOM_100$gamma>.5,2,sum)!=0])
form_MOM <- formula(y ~ .,Model_MOM)
cox_bmt <- coxph(form_MOM,data = Model_MOM)
summary(cox_bmt)$concordance[1]
#CV
y_CV=llply(.data = 1:10, .fun = function(k){
  Surv(survival_data$days2death[-group[[k]]], survival_data$status[-group[[k]]])
}, .parallel = FALSE)
Model_CV_MOM=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV[[k]]$Ez[,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV[[k]]$Ez[,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM[[k]]),data = Model_CV_MOM[[k]])
}, .parallel = FALSE)
Cox_train_MOM<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_MOM)

#Normal
#All
Model_Normal<-data.frame(y=y_surv,Normal_100$Ez[,apply(Normal_100$gamma>.5,2,sum)!=0])
form_Normal <- formula(y ~ .,Model_Normal)
cox_bmt_Normal <- coxph(form_Normal,data = Model_Normal)
summary(cox_bmt_Normal)$concordance[1]
#CV
Model_CV_Normal=llply(.data = 1:10, .fun = function(k){
  if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
    data.frame(y=y_CV[[k]],resultNormal_100_var_CV[[k]]$Ez[,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultNormal_100_CV[[k]]$Ez[,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_Normal=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Normal[[k]]),data = Model_CV_Normal[[k]])
}, .parallel = FALSE)
Cox_train_Normal<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Normal[[k]])$concordance[1]))
#Ez of test
if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_var_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_Normal <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Normal_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Normal)

#Flat
#All
Model_Flat<-data.frame(y=y_surv,Flat_100$Ez[,1:85])
form_Flat <- formula(y ~ .,Model_Flat)
cox_bmt_Flat <- coxph(form_Normal,data = Model_Flat)
summary(cox_bmt_Flat)$concordance[1]
#CV
Model_CV_Flat=llply(.data = 1:10, .fun = function(k){
  if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }else{
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }

}, .parallel = FALSE)
cox_bmt_CV_Flat=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Flat[[k]]),data = Model_CV_Flat[[k]])
}, .parallel = FALSE)
Cox_train_Flat<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Flat[[k]])$concordance[1]))
#Ez of test
if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_var_CV,group,100)
}else{
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_CV,group,100)
}
predictions_CV_Flat_test=lapply(1:10, function(k) predict(cox_bmt_CV_Flat[[k]],data.frame(EZ_test_Flat[[k]])))
Cox_test_Flat <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Flat_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Flat)

#MOM2
Model_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM_difInit[[k]]),data = Model_CV_MOM_difInit[[k]])
}, .parallel = FALSE)
Cox_train_MOM_difInit<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM_difInit[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM_difInit <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test_difInit[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

#COMBAT
#All
Model_COMBAT<-data.frame(y=y_surv,FA_var_COMBAT$Z)
form_COMBAT  <- formula(y ~.,Model_COMBAT)
cox_bmt_COMBAT <- coxph(form_COMBAT,data = Model_COMBAT)
summary(cox_bmt_COMBAT)$concordance[1]
#CV
resultCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(t(combat_edata_2[,-group[[y]]]),17,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultCOMBAT_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_COMBAT[[k]]),data = Model_CV_COMBAT[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV,group)
predictions_CV_COMBAT_test=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT[[k]],data.frame(EZ_test_COMBAT[[k]])))
Cox_test_COMBAT <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_COMBAT)
FN.test.COMBAT<-unlist(lapply(1:10, function(k) norm(t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma),type ="F")))
FN.test.COMBAT.W<-unlist(lapply(1:10, function(k) norm((t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma))%*%diag(1/resultCOMBAT_CV[[k]]$Sigma),type ="F")))

#No correction
Model_NC<-data.frame(y=y_surv,FA_var$Z)
form_NC  <- formula(y ~.,Model_NC)
cox_bmt_NC <- coxph(form_NC,data = Model_NC)
summary(cox_bmt_NC)$concordance[1]
#CV
resultNC_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(X_var_std[-group[[y]],],4,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_NC=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultNC_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_NC=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_NC[[k]]),data = Model_CV_NC[[k]])
}, .parallel = FALSE)
Cox_train_NC<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_NC[[k]])$concordance[1]))
#Ez of test
EZ_test_NC<-Ez.test.COMBAT.ov(X_var_std,resultNC_CV,group)
predictions_CV_NC_test=lapply(1:10, function(k) predict(cox_bmt_CV_NC[[k]],data.frame(EZ_test_NC[[k]])))
Cox_test_NC <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_NC_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

######Tables###
q.sim=data.frame(Flat=100,
                 Normal_SS=100,
                 MOM_SS=100,
                 MOM_SS2=100,
                 ComBat=100)

q.hat.2=data.frame(Flat=sum(Flat_100$gTheta!=0),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0),
                   ComBat=ncol(FA_var_COMBAT$Gamma))

Cox.index=data.frame(Flat=mean(Cox_test_Flat,na.rm=TRUE),
                     Normal_SS=mean(Cox_test_Normal,na.rm=TRUE),
                     MOM_SS=mean(Cox_test_MOM,na.rm=TRUE),
                     MOM_SS2=mean(Cox_test_MOM_difInit,na.rm=TRUE),
                     ComBat=mean(Cox_test_COMBAT,na.rm=TRUE))

Cox.index.med=data.frame(Flat=median(Cox_test_Flat,na.rm=TRUE),
                         Normal_SS=median(Cox_test_Normal,na.rm=TRUE),
                         MOM_SS=median(Cox_test_MOM,na.rm=TRUE),
                         MOM_SS2=median(Cox_test_MOM_difInit,na.rm=TRUE),
                         ComBat=median(Cox_test_COMBAT,na.rm=TRUE))

FN.x=data.frame(Flat=norm(X_var_std-
                            (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                          type ="F"),
                Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
                  norm(X_var_std-
                         (Normal_100$Ez%*%t(PostM2(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (Normal_100$Ez%*%t(PostM(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                              type ="F")},
                MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
                  norm(X_var_std-
                         (MOM_100$Ez%*%t(PostM2(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100$Ez%*%t(PostM(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                              type ="F")},
                MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
                  norm(X_var_std-
                         (MOM_100_difInit$Ez%*%t(PostM2(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100_difInit$Ez%*%t(PostM(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                              type ="F")},
                ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

FN.x.NP=data.frame(Flat=norm(X_var_std-
                               (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                             type ="F"),
                   Normal_SS=norm(X_var_std-
                                    (Normal_100$Ez%*%t(Normal_100$M)+cbind(V,B)%*%t(Normal_100$Theta)),
                                  type ="F"),
                   MOM_SS=norm(X_var_std-
                                 (MOM_100$Ez%*%t(MOM_100$M)+cbind(V,B)%*%t(MOM_100$Theta)),
                               type ="F"),
                   MOM_SS2=norm(X_var_std-
                                  (MOM_100_difInit$Ez%*%t(MOM_100_difInit$M)+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                                type ="F"),
                   ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

Fn.x.test=data.frame(Flat=min(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk),
                     Normal_SS=min(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk),
                     MOM_SS=min(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk),
                     MOM_SS2=min(fnMOM100rdifInit,fnMOM100rjkdifInit,fnMOM100nrdifInit,fnMOM100nrjkdifInit),
                     ComBat=mean(FN.test.COMBAT))

Fn.x.test.NP=data.frame(Flat=if((min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW))){
  mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
    mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
    mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)},
  ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

it=data.frame(Flat=Flat_100$iterations,
              Normal_SS=Normal_100$iterations,
              MOM_SS=MOM_100$iterations,
              MOM_SS2=MOM_100_difInit$iterations,
              ComBat=FA_var_COMBAT$niter)

m.hat=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                 Normal_SS=sum(Normal_100$gamma>0.5),
                 MOM_SS=sum(MOM_100$gamma>0.5),
                 MOM_SS2=sum(MOM_100_difInit$gamma>0.5),
                 ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

m.hat.2=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

CVW.output=data.frame(Flat=c(fnFlat100rW,fnFlat100rjkW,fnFlat100nrW,fnFlat100nrjkW,
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      Normal=c(fnNormal100rW,fnNormal100rjkW,fnNormal100nrW,fnNormal100nrjkW,
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM=c(fnMOM100rW,fnMOM100rjkW,fnMOM100nrW,fnMOM100nrjkW,
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      ComBat=rep(mean(FN.test.COMBAT.W),6))

CV.output=data.frame(Flat=c(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk,
                            mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     Normal=c(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk,
                              mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                              mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM=c(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk,
                           mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                           mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                            mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     ComBat=rep(norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"),6))
rownames(CVW.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")
rownames(CV.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")

write.csv(CV.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCV09")
write.csv(CVW.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCVW09")
tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,mhat=m.hat,mhat2=m.hat.2,Cox_mean=Cox.index,Cox_median=Cox.index.med,FN_x=FN.x,FN_x_NP=FN.x.NP,FN_x_test=Fn.x.test,FN_x_test_NP=Fn.x.test.NP,it=it)
round(t(tableFN2),3)
write.csv(t(tableFN2), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V3lun09")

####CV####
set.seed(132)
index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,trunc(n/10),replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}
### MOM
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM")
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nr=mean(FN.CV.BE.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100r=mean(FN.CV.BE.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)) #TRUE

fnMOM100nrW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)) #FALSE

MOM_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW)))
#MOM_100_NR=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varimax=FALSE)

ggplot(data = data.frame(MOM_100$Ez),aes(X1,X2,colour=batch)) + geom_point(size = 3)+
  theme_bw()+
  labs(title="MOM") + theme(legend.position="none")

###Normal
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal")
}, .parallel = FALSE)

#Varimax
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=TRUE)
}, .parallel = FALSE)

fnNormal100nr=mean(FN.CV.BE.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100r=mean(FN.CV.BE.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.BE.jk.ov(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.BE.jk.ov(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)) #FALSE

fnNormal100nrW=mean(FN.CV.BE.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.BE.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)) #FALSE

Normal_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varimax=(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)))

###Flat
resultFlat_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat")
}, .parallel = FALSE)

#Varimax
resultFlat_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=TRUE)
}, .parallel = FALSE)

fnFlat100nr=mean(FN.CV.BE.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100r=mean(FN.CV.BE.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjk=mean(FN.CV.BE.jk.ov(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjk=mean(FN.CV.BE.jk.ov(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100r,fnFlat100rjk)<=min(fnFlat100nr,fnFlat100nrjk)) #TRUE

fnFlat100nrW=mean(FN.CV.BE.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rW=mean(FN.CV.BE.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100nrjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
fnFlat100rjkW=mean(FN.CV.BE.jk.ov.weighted(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)) #TRUE

Flat_100=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=2, epsM=0.05, prior="Flat",varimax=(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)))

#Different initiation MOM
init_Normal<-list(theta=Normal_100$Theta,
                  sigma=diag(Normal_100$sigma[,1]),
                  M=Normal_100$M,
                  z=Normal_100$Ez,
                  D=Normal_100$D,
                  p.gamma=Normal_100$gamma,
                  g.theta=Normal_100$gTheta)

resultpMOM_100_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal)
}, .parallel = FALSE)

#Varimax
resultpMOM_100_var_CV_difInit= llply(.data = 1:10, .fun = function(y){
  print(y)
  BFA.EM.BE(x=X_var_std[-group[[y]],], v=V[-group[[y]]], b=B[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=TRUE)
}, .parallel = FALSE)

fnMOM100nrdifInit=mean(FN.CV.BE.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rdifInit=mean(FN.CV.BE.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkdifInit=mean(FN.CV.BE.jk.ov(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rdifInit,fnMOM100rjkdifInit)<=min(fnMOM100nrdifInit,fnMOM100nrjkdifInit)) #TRUE

fnMOM100nrWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rWdifInit=mean(FN.CV.BE.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100nrjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
fnMOM100rjkWdifInit=mean(FN.CV.BE.jk.ov.weighted(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)
(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)) #FALSE

MOM_100_difInit=BFA.EM.BE(x=X_var_std, v=V, b=B, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",init=init_Normal,varimax=(min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit)))

####Survival analysis####
# Fit Cox Model
survival_data = data.frame(days2death=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"daystodeath"],
                                                   LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"daystodeath"])),
                           stage=as.factor(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"pathologicstage"],
                                             LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"pathologicstage"])),
                           age=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"yearstobirth"],
                                            LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"yearstobirth"])),
                           status=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"vitalstatus"],
                                               LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"vitalstatus"])))

survival_data$days2death[is.na(survival_data$days2death)]=0
# Kaplan Meier Survival Curve
y_surv <- Surv(survival_data$days2death,survival_data$status)
#MOM
#All
Model_MOM<-data.frame(y=y_surv,MOM_100$Ez[,apply(MOM_100$gamma>.5,2,sum)!=0])
form_MOM <- formula(y ~ .,Model_MOM)
cox_bmt <- coxph(form_MOM,data = Model_MOM)
summary(cox_bmt)$concordance[1]
#CV
y_CV=llply(.data = 1:10, .fun = function(k){
  Surv(survival_data$days2death[-group[[k]]], survival_data$status[-group[[k]]])
}, .parallel = FALSE)
Model_CV_MOM=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV[[k]]$Ez[,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV[[k]]$Ez[,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM[[k]]),data = Model_CV_MOM[[k]])
}, .parallel = FALSE)
Cox_train_MOM<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))){
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV,group,100)
  predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(resultpMOM_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_MOM)

#Normal
#All
Model_Normal<-data.frame(y=y_surv,Normal_100$Ez[,apply(Normal_100$gamma>.5,2,sum)!=0])
form_Normal <- formula(y ~ .,Model_Normal)
cox_bmt_Normal <- coxph(form_Normal,data = Model_Normal)
summary(cox_bmt_Normal)$concordance[1]
#CV
Model_CV_Normal=llply(.data = 1:10, .fun = function(k){
  if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
    data.frame(y=y_CV[[k]],resultNormal_100_var_CV[[k]]$Ez[,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultNormal_100_CV[[k]]$Ez[,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_Normal=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Normal[[k]]),data = Model_CV_Normal[[k]])
}, .parallel = FALSE)
Cox_train_Normal<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Normal[[k]])$concordance[1]))
#Ez of test
if(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW)){
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_var_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_var_CV[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_Normal<-Ez.test.ov(X_var_std,V,B,resultNormal_100_CV,group,100)
  predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(resultNormal_100_CV[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_Normal <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Normal_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Normal)

#Flat
#All
Model_Flat<-data.frame(y=y_surv,Flat_100$Ez[,1:85])
form_Flat <- formula(y ~ .,Model_Flat)
cox_bmt_Flat <- coxph(form_Normal,data = Model_Flat)
summary(cox_bmt_Flat)$concordance[1]
#CV
Model_CV_Flat=llply(.data = 1:10, .fun = function(k){
  if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }else{
    data.frame(y=y_CV[[k]],resultFlat_100_var_CV[[k]]$Ez[,1:85])
  }

}, .parallel = FALSE)
cox_bmt_CV_Flat=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_Flat[[k]]),data = Model_CV_Flat[[k]])
}, .parallel = FALSE)
Cox_train_Flat<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Flat[[k]])$concordance[1]))
#Ez of test
if(min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW)){
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_var_CV,group,100)
}else{
  EZ_test_Flat<-Ez.test.ov(X_var_std,V,B,resultFlat_100_CV,group,100)
}
predictions_CV_Flat_test=lapply(1:10, function(k) predict(cox_bmt_CV_Flat[[k]],data.frame(EZ_test_Flat[[k]])))
Cox_test_Flat <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Flat_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_Flat)

#MOM2
Model_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    data.frame(y=y_CV[[k]],resultpMOM_100_var_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }else{
    data.frame(y=y_CV[[k]],resultpMOM_100_CV_difInit[[k]]$Ez[,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])
  }
}, .parallel = FALSE)
cox_bmt_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_MOM_difInit[[k]]),data = Model_CV_MOM_difInit[[k]])
}, .parallel = FALSE)
Cox_train_MOM_difInit<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM_difInit[[k]])$concordance[1]))
#Ez of test
if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_var_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_var_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}else{
  EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V,B,resultpMOM_100_CV_difInit,group,100)
  predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(resultpMOM_100_CV_difInit[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM_difInit <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test_difInit[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

#COMBAT
#All
Model_COMBAT<-data.frame(y=y_surv,FA_var_COMBAT$Z)
form_COMBAT  <- formula(y ~.,Model_COMBAT)
cox_bmt_COMBAT <- coxph(form_COMBAT,data = Model_COMBAT)
summary(cox_bmt_COMBAT)$concordance[1]
#CV
resultCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(t(combat_edata_2[,-group[[y]]]),17,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultCOMBAT_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_COMBAT[[k]]),data = Model_CV_COMBAT[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV,group)
predictions_CV_COMBAT_test=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT[[k]],data.frame(EZ_test_COMBAT[[k]])))
Cox_test_COMBAT <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_COMBAT)
FN.test.COMBAT<-unlist(lapply(1:10, function(k) norm(t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma),type ="F")))
FN.test.COMBAT.W<-unlist(lapply(1:10, function(k) norm((t(combat_edata_2[,group[[k]]])-EZ_test_COMBAT[[k]]%*%t(resultCOMBAT_CV[[k]]$Gamma))%*%diag(1/resultCOMBAT_CV[[k]]$Sigma),type ="F")))

#No correction
Model_NC<-data.frame(y=y_surv,FA_var$Z)
form_NC  <- formula(y ~.,Model_NC)
cox_bmt_NC <- coxph(form_NC,data = Model_NC)
summary(cox_bmt_NC)$concordance[1]
#CV
resultNC_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  fa.em(X_var_std[-group[[y]],],4,tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_NC=llply(.data = 1:10, .fun = function(k){
  data.frame(y=y_CV[[k]],resultNC_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_NC=llply(.data = 1:10, .fun = function(k){
  coxph(formula(y ~ .,Model_CV_NC[[k]]),data = Model_CV_NC[[k]])
}, .parallel = FALSE)
Cox_train_NC<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_NC[[k]])$concordance[1]))
#Ez of test
EZ_test_NC<-Ez.test.COMBAT.ov(X_var_std,resultNC_CV,group)
predictions_CV_NC_test=lapply(1:10, function(k) predict(cox_bmt_CV_NC[[k]],data.frame(EZ_test_NC[[k]])))
Cox_test_NC <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_NC_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))

######Tables###
q.sim=data.frame(Flat=100,
                 Normal_SS=100,
                 MOM_SS=100,
                 MOM_SS2=100,
                 ComBat=100)

q.hat.2=data.frame(Flat=sum(Flat_100$gTheta!=0),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0),
                   ComBat=ncol(FA_var_COMBAT$Gamma))

Cox.index=data.frame(Flat=mean(Cox_test_Flat,na.rm=TRUE),
                     Normal_SS=mean(Cox_test_Normal,na.rm=TRUE),
                     MOM_SS=mean(Cox_test_MOM,na.rm=TRUE),
                     MOM_SS2=mean(Cox_test_MOM_difInit,na.rm=TRUE),
                     ComBat=mean(Cox_test_COMBAT,na.rm=TRUE))

Cox.index.med=data.frame(Flat=median(Cox_test_Flat,na.rm=TRUE),
                         Normal_SS=median(Cox_test_Normal,na.rm=TRUE),
                         MOM_SS=median(Cox_test_MOM,na.rm=TRUE),
                         MOM_SS2=median(Cox_test_MOM_difInit,na.rm=TRUE),
                         ComBat=median(Cox_test_COMBAT,na.rm=TRUE))

FN.x=data.frame(Flat=norm(X_var_std-
                            (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                          type ="F"),
                Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
                  norm(X_var_std-
                         (Normal_100$Ez%*%t(PostM2(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (Normal_100$Ez%*%t(PostM(Normal_100))+cbind(V,B)%*%t(Normal_100$Theta)),
                              type ="F")},
                MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
                  norm(X_var_std-
                         (MOM_100$Ez%*%t(PostM2(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100$Ez%*%t(PostM(MOM_100))+cbind(V,B)%*%t(MOM_100$Theta)),
                              type ="F")},
                MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
                  norm(X_var_std-
                         (MOM_100_difInit$Ez%*%t(PostM2(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                       type ="F")}else{
                         norm(X_var_std-
                                (MOM_100_difInit$Ez%*%t(PostM(MOM_100_difInit))+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                              type ="F")},
                ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

FN.x.NP=data.frame(Flat=norm(X_var_std-
                               (Flat_100$Ez%*%t(Flat_100$M)+cbind(V,B)%*%t(Flat_100$Theta)),
                             type ="F"),
                   Normal_SS=norm(X_var_std-
                                    (Normal_100$Ez%*%t(Normal_100$M)+cbind(V,B)%*%t(Normal_100$Theta)),
                                  type ="F"),
                   MOM_SS=norm(X_var_std-
                                 (MOM_100$Ez%*%t(MOM_100$M)+cbind(V,B)%*%t(MOM_100$Theta)),
                               type ="F"),
                   MOM_SS2=norm(X_var_std-
                                  (MOM_100_difInit$Ez%*%t(MOM_100_difInit$M)+cbind(V,B)%*%t(MOM_100_difInit$Theta)),
                                type ="F"),
                   ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

Fn.x.test=data.frame(Flat=min(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk),
                     Normal_SS=min(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk),
                     MOM_SS=min(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk),
                     MOM_SS2=min(fnMOM100rdifInit,fnMOM100rjkdifInit,fnMOM100nrdifInit,fnMOM100nrjkdifInit),
                     ComBat=mean(FN.test.COMBAT))

Fn.x.test.NP=data.frame(Flat=if((min(fnFlat100rW,fnFlat100rjkW)<=min(fnFlat100nrW,fnFlat100nrjkW))){
  mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
    mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  Normal_SS=if(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW)){
    mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS=if(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW)){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test)},
  MOM_SS2=if((min(fnMOM100rWdifInit,fnMOM100rjkWdifInit)<=min(fnMOM100nrWdifInit,fnMOM100nrjkWdifInit))){
    mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)}else{
      mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)},
  ComBat=norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"))

it=data.frame(Flat=Flat_100$iterations,
              Normal_SS=Normal_100$iterations,
              MOM_SS=MOM_100$iterations,
              MOM_SS2=MOM_100_difInit$iterations,
              ComBat=FA_var_COMBAT$niter)

m.hat=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                 Normal_SS=sum(Normal_100$gamma>0.5),
                 MOM_SS=sum(MOM_100$gamma>0.5),
                 MOM_SS2=sum(MOM_100_difInit$gamma>0.5),
                 ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

m.hat.2=data.frame(Flat=nrow(Flat_100$M)*ncol(Flat_100$M),
                   Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS=sum(apply(MOM_100$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   MOM_SS2=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0)*ncol(X_var_std),
                   ComBat=nrow(FA_var_COMBAT$Gamma)*ncol(FA_var_COMBAT$Gamma))

CVW.output=data.frame(Flat=c(fnFlat100rW,fnFlat100rjkW,fnFlat100nrW,fnFlat100nrjkW,
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      Normal=c(fnNormal100rW,fnNormal100rjkW,fnNormal100nrW,fnNormal100nrjkW,
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                               mean(FN.CV.BE.test.NP.W(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM=c(fnMOM100rW,fnMOM100rjkW,fnMOM100nrW,fnMOM100nrjkW,
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      MOM2=c(fnMOM100rWdifInit,fnMOM100rjkWdifInit,fnMOM100nrWdifInit,fnMOM100nrjkWdifInit,
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                             mean(FN.CV.BE.test.NP.W(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                      ComBat=rep(mean(FN.test.COMBAT.W),6))

CV.output=data.frame(Flat=c(fnFlat100r,fnFlat100rjk,fnFlat100nr,fnFlat100nrjk,
                            mean(FN.CV.BE.test.NP(resultFlat_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultFlat_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     Normal=c(fnNormal100r,fnNormal100rjk,fnNormal100nr,fnNormal100nrjk,
                              mean(FN.CV.BE.test.NP(resultNormal_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                              mean(FN.CV.BE.test.NP(resultNormal_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM=c(fnMOM100r,fnMOM100rjk,fnMOM100nr,fnMOM100nrjk,
                           mean(FN.CV.BE.test.NP(resultpMOM_100_CV,X=X_var_std,V=V,B=B,group,100)$X.test),
                           mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     MOM2=c(fnMOM100rdifInit,fnMOM100rjkdifInit,fnMOM100nrdifInit,fnMOM100nrjkdifInit,
                            mean(FN.CV.BE.test.NP(resultpMOM_100_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test),
                            mean(FN.CV.BE.test.NP(resultpMOM_100_var_CV_difInit,X=X_var_std,V=V,B=B,group,100)$X.test)),
                     ComBat=rep(norm(t(combat_edata_2)-FA_var_COMBAT$Z%*%t(FA_var_COMBAT$Gamma),type ="F"),6))
rownames(CVW.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")
rownames(CV.output)<-c("R.j","R.jk","NR.j","NR.jk","NR","R")

write.csv(CV.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCV10")
write.csv(CVW.output, file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808lunCVW10")
tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,mhat=m.hat,mhat2=m.hat.2,Cox_mean=Cox.index,Cox_median=Cox.index.med,FN_x=FN.x,FN_x_NP=FN.x.NP,FN_x_test=Fn.x.test,FN_x_test_NP=Fn.x.test.NP,it=it)
round(t(tableFN2),3)
write.csv(t(tableFN2), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Cancer_datasets/TablesLUN/1808V3lun10")
