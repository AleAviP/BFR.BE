######p=1,000####
###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(123)

n<-100	# Number of observations
G<-1000	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX
Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1000q10NBDataset01")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset01.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(124)

n<-100	# Number of observations
G<-1000	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1000q10NBDataset02")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset02.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(125)

n<-100	# Number of observations
G<-1000	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1000q10NBDataset03")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset03.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(126)

n<-100	# Number of observations
G<-1000	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1000q10NBDataset04")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset04.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(127)

n<-100	# Number of observations
G<-1000	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1000q10NBDataset05")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset05.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(128)

n<-100	# Number of observations
G<-1000	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))
#MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=FALSE)

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                # MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                #              FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                #              FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                MOM_S=FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1000q10NBDataset06")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset06.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(129)

n<-100	# Number of observations
G<-1000	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1000q10NBDataset07")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset07.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(130)

n<-100	# Number of observations
G<-1000	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1000q10NBDataset08")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset08.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(131)

n<-100	# Number of observations
G<-1000	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1000q10NBDataset09")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset09.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(132)

n<-100	# Number of observations
G<-1000	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1000q10NBDataset10")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset10.RData")

######p=1,500####
###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(123)

n<-100	# Number of observations
G<-1500	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1500q10NBDataset01")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset01.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(124)

n<-100	# Number of observations
G<-1500	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1500q10NBDataset02")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset02.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(125)

n<-100	# Number of observations
G<-1500	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1500q10NBDataset03")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset03.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(126)

n<-100	# Number of observations
G<-1500	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1500q10NBDataset04")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset04.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(127)

n<-100	# Number of observations
G<-1500	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1500q10NBDataset05")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset05.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(128)

n<-100	# Number of observations
G<-1500	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1500q10NBDataset06")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset06.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(129)

n<-100	# Number of observations
G<-1500	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1500q10NBDataset07")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset07.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(130)

n<-100	# Number of observations
G<-1500	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  #BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=2, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1500q10NBDataset08")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset08.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(131)

n<-100	# Number of observations
G<-1500	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1500q10NBDataset09")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset09.RData")

###1
rm(list=ls())
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Veronikas/FA_CODE/FACTOR_CODE_update.R")

library(mvtnorm)
library(partitions)
library(nloptr)
library(glmnet)
require(MASS)
require(psych)
require(matrixcalc)
require(Matrix)
require(plyr)
require(LaplacesDemon)
require(mnormt)
require(animation)
require(PMA)

set.seed(132)

n<-100	# Number of observations
G<-1500	# Number of responses
dd<-10   # True number of factors

#B<-matrix(runif(dd*G,-1,1),ncol=dd,nrow=G)
grid<-seq(-1,1,length.out=G)
#B<-sapply(1:dd,function(x) sample(grid))
B<-matrix(grid,ncol=dd,nrow=G)
rate<-trunc(G/(dd*2))
for(i in 2:dd){
  B[,i]<-grid[c((i*rate):G,1:(i*rate-1))]
}

length<-G

# TRUE COVARIANCE MATRIX

Sigma<-B%*%t(B)+diag(G)

E <- rmvnorm(n,numeric(G),diag(G))
Omega <- rmvnorm(n,numeric(dd),diag(dd))
Y <- Omega%*%t(B) + E
#Y<-rmvnorm(n,numeric(G),Sigma)

index.cv<-c(1:n)
group<-list()
for (i in 1:10){
  group[[i]]<-sample(index.cv,n/10,replace=FALSE)
  index.cv<-index.cv[!index.cv%in%group[[i]]]
}

####CV####
### pMOM
#No varimax
#10
resultpMOM_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultpMOM_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultpMOM_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultpMOM_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnMOM10nr=mean(FN.CV(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10r=mean(FN.CV(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjk=mean(FN.CV.jk(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjk=mean(FN.CV.jk(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk)))

fnMOM100nr=mean(FN.CV(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100r=mean(FN.CV(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjk=mean(FN.CV.jk(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjk=mean(FN.CV.jk(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk)))

### Normal
#No varimax
#10
resultNormal_10_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#100
resultNormal_100_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE)
}, .parallel = FALSE)

#Varimax
#10
resultNormal_10_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#100
resultNormal_100_var_CV= llply(.data = 1:10, .fun = function(y){
  BFA.EM.BE(x=Y[-group[[y]],], q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnNormal10nr=mean(FN.CV(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10r=mean(FN.CV(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjk=mean(FN.CV.jk(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjk=mean(FN.CV.jk(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk)))

fnNormal100nr=mean(FN.CV(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100r=mean(FN.CV(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjk=mean(FN.CV.jk(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjk=mean(FN.CV.jk(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk)))

#Flat
resultFlat_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)
resultFlat_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Flat",varianceBE=FALSE)

#Laplace
alpha<-1/G
epsilon<-0.05
##Prior elicitation: Fast growing
#lambda1<-1.26188*10^(-31)
#lambda0<-3429/(5*log(19))
##Prior elicitation values: Matching the important and non-important m_jk
lambda0<-1/0.1055594
lambda1<-1/2.828226
#lambda0=1/0.325693
#lambda0=1/16
#lambda0=15.0725
#lambda1=1*10^(-2.169636)
#lambda0_2=1/0.3161161
#lambda1_2=1/9.984873
##Prior elicitation values: Inbetween MOM and Normal
#lambda0_2<-1/0.1055594
#lambda1_2<-1/2.828226
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=FALSE)

#SPC
resultSP.cv=SPC.cv(Y, sumabsvs=seq(1.2, sqrt(ncol(Y)), len=10))
resultSPC_10= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=10)
resultSPC_100= SPC(Y,sumabsv=resultSP.cv$bestsumabsv, K=100)

#Laplace
alpha<-1/G
epsilon<-0.05
#Veronika's values
lambda1<-0.001
lambda0<-5
#My same initial value
svd.X <- svd(Y)
svd.U <- svd.X$u
svd.V <- svd.X$v
Lambda <- diag(svd.X$d)
K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_10_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_10_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_10_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100_Vl5=FACTOR_ROTATE(Y,lambda0,lambda1,start,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-10
resultLaplace_100_Vl10=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl5,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)
lambda0<-20
resultLaplace_100_Vl20=FACTOR_ROTATE(Y,lambda0,lambda1,resultLaplace_100_Vl10,K,epsilon,alpha,PX=TRUE,approximate=FALSE,100,varimax=TRUE)

###TABLE###
q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nr,fnNormal100r)<=min(fnNormal100nrjk,fnNormal100rjk),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nr,fnMOM100r)<=min(fnMOM100nrjk,fnMOM100rjk),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nr,fnNormal10r)<=min(fnNormal10nrjk,fnNormal10rjk),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nr,fnMOM10r)<=min(fnMOM10nrjk,fnMOM10rjk),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1806FixMn100p1500q10NBDataset10")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset10.RData")

####WEIGHTED CV####
######p=1,000####
#1
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset01.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1000q10NBDataset01")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset01.RData")

#2
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset02.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1000q10NBDataset02")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset02.RData")

#3
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset03.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1000q10NBDataset03")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset03.RData")

#4
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset04.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1000q10NBDataset04")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset04.RData")

#5
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset05.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1000q10NBDataset05")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset05.RData")

#6
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset06.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1000q10NBDataset06")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset06.RData")

#7
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset07.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1000q10NBDataset07")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset07.RData")

#8
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset08.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1000q10NBDataset08")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset08.RData")

#9
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset09.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1000q10NBDataset09")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset09.RData")

#10
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset10.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1000q10NBDataset10")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset10.RData")

######p=1,500####
#1
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset01.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1500q10NBDataset01")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset01.RData")

#2
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset02.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1500q10NBDataset02")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset02.RData")

#3
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset03.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1500q10NBDataset03")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset03.RData")

#4
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset04.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1500q10NBDataset04")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset04.RData")

#5
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset05.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1500q10NBDataset05")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset05.RData")

#6
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset06.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1500q10NBDataset06")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset06.RData")

#7
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset07.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1500q10NBDataset07")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset07.RData")

#8
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset08.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1500q10NBDataset08")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset08.RData")

#9
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset09.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1500q10NBDataset09")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset09.RData")

#10
rm(list=ls())
load("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset10.RData")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.CV.V1.R")
source("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/BE.BFA.EM/R/BFA.EM.BE.FUN.CV.V1.R")

#MOM
fnMOM10nrW=mean(FN.CV.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rW=mean(FN.CV.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM10nrjkW=mean(FN.CV.jk.weighted(resultpMOM_10_CV,Y,Omega,B,group,10)$X.test)
fnMOM10rjkW=mean(FN.CV.jk.weighted(resultpMOM_10_var_CV,Y,Omega,B,group,10)$X.test)
fnMOM100nrW=mean(FN.CV.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rW=mean(FN.CV.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)
fnMOM100nrjkW=mean(FN.CV.jk.weighted(resultpMOM_100_CV,Y,Omega,B,group,100)$X.test)
fnMOM100rjkW=mean(FN.CV.jk.weighted(resultpMOM_100_var_CV,Y,Omega,B,group,100)$X.test)

CVMOM10<-(min(fnMOM10r,fnMOM10rjk)<=min(fnMOM10nr,fnMOM10nrjk))
CVMOM100<-(min(fnMOM100r,fnMOM100rjk)<=min(fnMOM100nr,fnMOM100nrjk))
CVMOM10W<-(min(fnMOM10rW,fnMOM10rjkW)<=min(fnMOM10nrW,fnMOM10nrjkW))
CVMOM100W<-(min(fnMOM100rW,fnMOM100rjkW)<=min(fnMOM100nrW,fnMOM100nrjkW))

#Recalculating
if(CVMOM10!=CVMOM10W){
  MOM_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM10W)
}
if(CVMOM100!=CVMOM100W){
  MOM_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="N.MOM",varianceBE=FALSE,varimax=CVMOM100W)
}

#Normal
fnNormal10nrW=mean(FN.CV.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rW=mean(FN.CV.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal10nrjkW=mean(FN.CV.jk.weighted(resultNormal_10_CV,Y,Omega,B,group,10)$X.test)
fnNormal10rjkW=mean(FN.CV.jk.weighted(resultNormal_10_var_CV,Y,Omega,B,group,10)$X.test)
fnNormal100nrW=mean(FN.CV.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rW=mean(FN.CV.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)
fnNormal100nrjkW=mean(FN.CV.jk.weighted(resultNormal_100_CV,Y,Omega,B,group,100)$X.test)
fnNormal100rjkW=mean(FN.CV.jk.weighted(resultNormal_100_var_CV,Y,Omega,B,group,100)$X.test)

CVN10<-(min(fnNormal10r,fnNormal10rjk)<=min(fnNormal10nr,fnNormal10nrjk))
CVN100<-(min(fnNormal100r,fnNormal100rjk)<=min(fnNormal100nr,fnNormal100nrjk))
CVN10W<-(min(fnNormal10rW,fnNormal10rjkW)<=min(fnNormal10nrW,fnNormal10nrjkW))
CVN100W<-(min(fnNormal100rW,fnNormal100rjkW)<=min(fnNormal100nrW,fnNormal100nrjkW))

if(CVN10!=CVN10W){
  Normal_10=BFA.EM.BE(x=Y, q = 10, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN10W)
}
if(CVN100!=CVN100W){
  Normal_100=BFA.EM.BE(x=Y, q = 100, eps = 0.001,it=100, epsM=0.05, prior="Normal",varianceBE=FALSE,varimax=CVN100W)
}

q.sim=data.frame(Flat_S=100,
                 Normal_S=100,
                 MOM_S=100,
                 Laplace_S=100,
                 FastBFA_S=100,
                 SPC_S=100,
                 Flat_NS=10,
                 Normal_NS=10,
                 MOM_NS=10,
                 Laplace_NS=10,
                 FastBFA_NS=10,
                 SPC_NS=10)

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,PostML(resultLaplace_10),Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=FNorm2(Normal_100$sigma,Normal_100$M,Sigma),
               MOM_S=FNorm2(MOM_100$sigma,MOM_100$M,Sigma),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=FNorm2(Normal_10$sigma,Normal_10$M,Sigma),
               MOM_NS=FNorm2(MOM_10$sigma,MOM_10$M,Sigma),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN2=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN2),1), file = "/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1808FixMn100p1500q10NBDataset10")
save.image("/Users/alejandra/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset10.RData")

#####CHANGING LAPLACE ########
########1000########
####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset01.RData")
set.seed(123)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN2),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1000q10NBDataset01")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset01.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset02.RData")
set.seed(124)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1000q10NBDataset02")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset02.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset03.RData")
set.seed(125)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1000q10NBDataset03")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset03.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset04.RData")
set.seed(126)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1000q10NBDataset04")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset04.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset05.RData")
set.seed(127)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1000q10NBDataset05")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset05.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset06.RData")
set.seed(128)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1000q10NBDataset06")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset06.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset07.RData")
set.seed(129)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1000q10NBDataset07")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset07.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset08.RData")
set.seed(130)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1000q10NBDataset08")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset08.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset09.RData")
set.seed(131)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1000q10NBDataset09")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset09.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset10.RData")
set.seed(132)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1000q10NBDataset10")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1000q10NBDataset10.RData")

########1500########
####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset01.RData")
set.seed(123)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1500q10NBDataset01")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset01.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset02.RData")
set.seed(124)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1500q10NBDataset02")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset02.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset03.RData")
set.seed(125)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1500q10NBDataset03")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset03.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset04.RData")
set.seed(126)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1500q10NBDataset04")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset04.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset05.RData")
set.seed(127)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1500q10NBDataset05")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset05.RData")

#####AQUI VOY#####
####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset06.RData")
set.seed(128)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1500q10NBDataset06")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset06.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset07.RData")
set.seed(129)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1500q10NBDataset07")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset07.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset08.RData")
set.seed(130)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1500q10NBDataset08")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset08.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset09.RData")
set.seed(131)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1500q10NBDataset09")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset09.RData")

####CVW####
load("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset10.RData")
set.seed(132)
### Laplace
#Laplace
#10
#No varimax
alpha<-1/G
epsilon<-0.05
lambda0<-1/0.1055594
lambda1<-1/2.828226
K<-10
resultLaplace_10_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_10_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
  return(aux)
}, .parallel = FALSE)

#100
#No varimax
K<-100
resultLaplace_100_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=FALSE)
  return(aux)
}, .parallel = FALSE)

#Varimax
resultLaplace_100_var_CV= llply(.data = 1:10, .fun = function(y){
  print(y)
  svd.X <- svd(Y[-group[[y]],])
  svd.U <- svd.X$u
  svd.V <- svd.X$v
  Lambda <- diag(svd.X$d)
  sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
  aux_p <- min(nrow(Y[-group[[1]],]),G)
  if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
    aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
  }else{aux.chol = Lambda-sigma2*diag(aux_p)}
  startB<-svd.V%*%t(svd.V)[,1:K]
  myImagePlot(abs(startB),F)
  title("Initialization")
  start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
  aux<-FACTOR_ROTATE(Y[-group[[y]],],lambda0,lambda1,start,K,epsilon,alpha,PX=FALSE,approximate=FALSE,10,varimax=TRUE)
}, .parallel = FALSE)

#Choosing a model
fnLaplace10nr=mean(FN.CV.L(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10r=mean(FN.CV.L(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nr=mean(FN.CV.L(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100r=mean(FN.CV.L(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

fnLaplace10nrW=mean(FN.CV.L.weighted(resultLaplace_10_CV,Y,Omega,B,group,10)$X.test)
fnLaplace10rW=mean(FN.CV.L.weighted(resultLaplace_10_var_CV,Y,Omega,B,group,10)$X.test)
fnLaplace100nrW=mean(FN.CV.L.weighted(resultLaplace_100_CV,Y,Omega,B,group,100)$X.test)
fnLaplace100rW=mean(FN.CV.L.weighted(resultLaplace_100_var_CV,Y,Omega,B,group,100)$X.test)

K<-10
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_10=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=10,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace10rW<fnLaplace10nrW))

K<-100
sigma2 <- 1/(G-K) * sum(svd.U[(K+1):G])                                                          # variance; average variance associated with discarded dimensions
aux_p <- min(n,G)
if(is.positive.definite(Lambda-sigma2*diag(aux_p))==FALSE){
  aux.chol = matrix(ncol=n,nearPD(Lambda-sigma2*diag(aux_p))$mat)
}else{aux.chol = Lambda-sigma2*diag(aux_p)}
startB<-(svd.V %*% chol(aux.chol) %*% diag(aux_p))[,1:K]
myImagePlot(abs(startB),F)
title("Initialization")
start<-list(B=startB,sigma=rep(1,G),theta=rep(0.5,K))
resultLaplace_100=FACTOR_ROTATE(Y,lambda0,lambda1,start,K=100,epsilon,alpha,PX=FALSE,approximate=FALSE,100,varimax=(fnLaplace100rW<fnLaplace100nrW))

q.hat.2=data.frame(Flat_S=sum(resultFlat_100$gTheta!=0),
                   Normal_S=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_S=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   Laplace_S=sum(apply(resultLaplace_100$P_star>0.5,2,sum)!=0),
                   FastBFA_S=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_S=sum(apply(resultSPC_100$v,2,sum)!=0),
                   Flat_NS=sum(resultFlat_10$gTheta!=0),
                   Normal_NS=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_NS=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   Laplace_NS=sum(apply(resultLaplace_10$P_star>0.5,2,sum)!=0),
                   FastBFA_NS=sum(apply(resultLaplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   SPC_NS=sum(apply(resultSPC_10$v,2,sum)!=0))

m.hat.2=data.frame(Flat_S=G,
                   Normal_S=sum(Normal_100$gamma>0.5)/10,
                   MOM_S=sum(MOM_100$gamma>0.5)/10,
                   Laplace_S=sum(resultLaplace_100$P_star>0.5)/10,
                   FastBFA_S=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_S=G,
                   Flat_NS=G,
                   Normal_NS=sum(Normal_10$gamma>0.5)/10,
                   MOM_NS=sum(MOM_10$gamma>0.5)/10,
                   Laplace_NS=sum(resultLaplace_10$P_star>0.5)/10,
                   FastBFA_NS=sum(resultLaplace_100_Vl20$P_star)/10,
                   SPC_NS=G)

FN.2=data.frame(Flat_S=FNorm(resultFlat_100$Ez,resultFlat_100$M,Omega,B),
                Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                                FNorm(Normal_100$Ez,PostM2(Normal_100),Omega,B),
                                FNorm(Normal_100$Ez,PostM(Normal_100),Omega,B)),
                MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                             FNorm(MOM_100$Ez,PostM2(MOM_100),Omega,B),
                             FNorm(MOM_100$Ez,PostM(MOM_100),Omega,B)),
                #Laplace_S=FNorm(resultLaplace_100$Omega,PostML(resultLaplace_100),Omega,B),
                Laplace_S=FNorm(resultLaplace_100$Omega,resultLaplace_100$B,Omega,B),
                #FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,PostML(resultLaplace_100_Vl20),Omega,B),
                FastBFA_S=FNorm(resultLaplace_100_Vl20$Omega,resultLaplace_100_Vl20$B,Omega,B),
                SPC_S=FNorm(resultSPC_100$u,resultSPC_100$v,Omega,B),
                Flat_NS=FNorm(resultFlat_10$Ez,resultFlat_10$M,Omega,B),
                Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                 FNorm(Normal_10$Ez,PostM2(Normal_10),Omega,B),
                                 FNorm(Normal_10$Ez,PostM(Normal_10),Omega,B)),
                MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                              FNorm(MOM_10$Ez,PostM2(MOM_10),Omega,B),
                              FNorm(MOM_10$Ez,PostM(MOM_10),Omega,B)),
                Laplace_NS=FNorm(resultLaplace_10$Omega,resultLaplace_10$B,Omega,B),
                #FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,PostML(resultLaplace_10_Vl20),Omega,B),
                FastBFA_NS=FNorm(resultLaplace_10_Vl20$Omega,resultLaplace_10_Vl20$B,Omega,B),
                SPC_NS=FNorm(resultSPC_10$u,resultSPC_10$v,Omega,B))


FN2=data.frame(Flat_S=FNorm2(resultFlat_100$sigma,resultFlat_100$M,Sigma),
               Normal_S=ifelse(min(fnNormal100nrW,fnNormal100rW)<=min(fnNormal100nrjkW,fnNormal100rjkW),
                               FNorm2(Normal_100$sigma,PostM2(Normal_100),Sigma),
                               FNorm2(Normal_100$sigma,PostM(Normal_100),Sigma)),
               MOM_S=ifelse(min(fnMOM100nrW,fnMOM100rW)<=min(fnMOM100nrjkW,fnMOM100rjkW),
                            FNorm2(MOM_100$sigma,PostM2(MOM_100),Sigma),
                            FNorm2(MOM_100$sigma,PostM(MOM_100),Sigma)),
               Laplace_S=FNorm2(resultLaplace_100$sigma,resultLaplace_100$B,Sigma),
               FastBFA_S=FNorm2(resultLaplace_100_Vl20$sigma,resultLaplace_100_Vl20$B,Sigma),
               SPC_S=norm(resultSPC_100$v%*%t(resultSPC_100$v)-Sigma,type ="F"),
               Flat_NS=FNorm2(resultFlat_10$sigma,resultFlat_10$M,Sigma),
               Normal_NS=ifelse(min(fnNormal10nrW,fnNormal10rW)<=min(fnNormal10nrjkW,fnNormal10rjkW),
                                FNorm2(Normal_10$sigma,PostM2(Normal_10),Sigma),
                                FNorm2(Normal_10$sigma,PostM(Normal_10),Sigma)),
               MOM_NS=ifelse(min(fnMOM10nrW,fnMOM10rW)<=min(fnMOM10nrjkW,fnMOM10rjkW),
                             FNorm2(MOM_10$sigma,PostM2(MOM_10),Sigma),
                             FNorm2(MOM_10$sigma,PostM(MOM_10),Sigma)),
               Laplace_NS=FNorm2(resultLaplace_10$sigma,resultLaplace_10$B,Sigma),
               FastBFA_NS=FNorm2(resultLaplace_10_Vl20$sigma,resultLaplace_10_Vl20$B,Sigma),
               SPC_NS=norm(resultSPC_10$v%*%t(resultSPC_10$v)-Sigma,type ="F"))

it=data.frame(Flat_S=resultFlat_100$iterations,
              Normal_S=Normal_100$iterations,
              MOM_S=MOM_100$iterations,
              Laplace_S=resultLaplace_100$niter,
              FastBFA_S=(resultLaplace_100_Vl5$niter+resultLaplace_100_Vl10$niter+resultLaplace_100_Vl10$niter),
              SPC_S=5,
              Flat_NS=resultFlat_10$iterations,
              Normal_NS=Normal_10$iterations,
              MOM_NS=MOM_10$iterations,
              Laplace_NS=resultLaplace_10$niter,
              FastBFA_NS=(resultLaplace_10_Vl5$niter+resultLaplace_10_Vl10$niter+resultLaplace_10_Vl10$niter),
              SPC_NS=5)

tableFN3=rbind.data.frame(q_star=q.sim,q_hat=q.hat.2,Mhat=m.hat.2,FN_ZM2=FN.2,FN_covX=FN2,it=it)
round(t(tableFN3),1)
write.csv(round(t(tableFN3),1), file = "/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/Table1809FixMn100p1500q10NBDataset10")
save.image("/Users/alejandraavalospacheco/Dropbox/OxWaSP/Programing/BFA/Examples/Paper1806/1806FixMn100p1500q10NBDataset10.RData")
