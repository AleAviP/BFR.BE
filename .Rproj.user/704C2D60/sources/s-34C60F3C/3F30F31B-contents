library(BFR.BE) #My code
library(fanc) #LASSO
require(sva) #COMBAT
require(cate) #MLE
library(reshape) #Plots

#####Running simulations####
set.seed(123)
n<-200
p<-250
q<-10
Pv = 1
Pb = 2

grid<-seq(-1,1,length.out=p)
M<-matrix(grid,ncol=q,nrow=p)
rate<-trunc(p/(q*2))
for(i in 2:q){
  M[,i]<-grid[c((i*rate):p,1:(i*rate-1))]
}

Z <- rmvnorm(n,numeric(q),diag(q))
Psi <- diag(c(rep(.5,p)),p)
V <- matrix(ncol = Pv, nrow = n, runif(n*Pv,0,3))
Theta = matrix(ncol=Pv,c(rep(-2,round(p/2)),rep(2,p-round(p/2))))
batch = round(runif(n,0,1),0)
B = matrix(ncol=Pb, c(batch,ifelse(batch==1,0,1)))
Beta = matrix(ncol=Pb, c(rep(2,p),rep(0,p)))
Tau_inv = cbind(diag(Psi),diag(Psi)*1.5)
Er = matrix(ncol=p, nrow=n)
for (i in 1:n){
  if(i%%10==0){print(i)}
  Er[i,] = mvrnorm(1, rep(0,p), diag(c(Tau_inv %*% B[i,]),p), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
}

X <- Z%*%t(M) + V%*%t(Theta) + B%*%t(Beta) + Er

##Estimation
#MOM
MOM_10=BFR.BE.EM.CV(x=X,v=V,b=B,q = 10)
MOM_100=BFR.BE.EM.CV(x=X,v=V,b=B,q = 100)

#Normal
Normal_10=BFR.BE.EM.CV(x=X,v=V,b=B,q = 10, prior="Normal")
Normal_100=BFR.BE.EM.CV(x=X,v=V,b=B,q = 100, prior="Normal")

#Flat
Flat_10=BFR.BE.EM.CV(x=X,v=V,b=B,q = 10, prior="Flat")
Flat_100=BFR.BE.EM.CV(x=X,v=V,b=B,q = 100, prior="Flat")

##Comparisons
#LASSO
rho.aux=as.matrix(seq(0.2,0.75,length.out=6))
rho.aux.1=as.matrix(seq(0.0075,0.75,length.out=10))
fit_lasso_10<- fanc(X,factors=10,rho=rho.aux.1,gamma=Inf)
fit_lasso_100<- fanc(X,factors=100,rho=rho.aux,gamma=Inf)

lasso_10<-select(fit_lasso_10, criterion="BIC", gamma=Inf)
lasso_100<-select(fit_lasso_100, criterion="BIC", gamma=Inf)

lasso_10.Ez=E.Z(X,as.matrix(lasso_10$loadings),lasso_10$uniquenesses,diag(10))$z
lasso_100.Ez=E.Z(X,as.matrix(lasso_100$loadings),lasso_100$uniquenesses,diag(100))$z

#COMBAT
mod_COMBAT <- model.matrix(~V, data=data.frame(X))
COMBAT <- ComBat(dat=t(X), batch=B[,1], mod=mod_COMBAT)
cov_COMBAT = cov(COMBAT)

COMBAT_10 = fa.em(t(COMBAT),10,tol=0.001, maxiter = 100)
COMBAT_100 = fa.em(t(COMBAT),100,tol=0.001, maxiter = 100)

#####Table####
q.hat.2=data.frame(Flat_10=10,
                   Normal_10=sum(apply(Normal_10$gamma>0.5,2,sum)!=0),
                   MOM_10=sum(apply(MOM_10$gamma>0.5,2,sum)!=0),
                   COMBAT_10=ncol(COMBAT_10$Gamma),
                   #FastBFA_10=sum(apply(Laplace_10_Vl20$P_star>0.5,2,sum)!=0),
                   Lasso_10=sum(apply(lasso_10$loadings,2,sum)!=0),
                   Flat_100=100,
                   Normal_100=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
                   MOM_100=sum(apply(MOM_100$gamma>0.5,2,sum)!=0),
                   COMBAT_100=ncol(COMBAT_100$Gamma),
                   #FastBFA_100=sum(apply(resultLaplace_100_Vl20$P_star>0.5,2,sum)!=0),
                   Lasso_100=sum(apply(lasso_100$loadings,2,sum)!=0))

m.hat.2=data.frame(Flat_10=250*10,
                   Normal_10=sum(Normal_10$gamma>0.5),
                   MOM_10=sum(MOM_10$gamma>0.5),
                   COMBAT_10= length(COMBAT_10$Gamma),
                   #FastBFA_10=sum(Laplace_10_Vl20$P_star),
                   Lasso_10=sum(apply(lasso_10$loadings!=0,2,sum)),
                   Flat_100=250*100,
                   Normal_100=sum(Normal_100$gamma>0.5),
                   MOM_100=sum(MOM_100$gamma>0.5),
                   COMBAT_100= length(COMBAT_100$Gamma),
                   #FastBFA_100=sum(Laplace_100_Vl20$P_star),
                   Lasso_100=sum(apply(lasso_100$loadings!=0,2,sum)))

FN.ZM=data.frame(Flat_10=FNorm(Flat_10$Ez,Flat_10$M,Z,M),
                 Normal_10=FNorm(Normal_10$Ez,Normal_10$Mpost,Z,M),
                 MOM_10=FNorm(MOM_10$Ez,MOM_10$Mpost,Z,M),
                 COMBAT_10=FNorm(COMBAT_10$Z,COMBAT_10$Gamma,Z,M),
                 #FastBFA_10=FNorm(Laplace_10_Vl20$Omega,Laplace_10_Vl20$B,Z,M),
                 Lasso_10=FNorm(lasso_10.Ez,as.matrix(lasso_10$loadings),Z,M),
                 Flat_100=FNorm(Flat_100$Ez,Flat_100$M,Z,M),
                 Normal_100=FNorm(Normal_100$Ez,Normal_100$Mpost,Z,M),
                 MOM_100=FNorm(MOM_100$Ez,MOM_100$Mpost,Z,M),
                 COMBAT_100=FNorm(COMBAT_100$Z,COMBAT_100$Gamma,Z,M),
                 #FastBFA_100=FNorm(Laplace_100_Vl20$Omega,Laplace_100_Vl20$B,Z,M),
                 Lasso_100=FNorm(lasso_100.Ez,as.matrix(lasso_100$loadings),Z,M))



FN.x=data.frame(Flat_10=FNormXhat(Flat_10,Z,V,B,Theta,Beta,M,Flat_10$columns),
                Normal_10=FNormXhat(Normal_10,Z,V,B,Theta,Beta,M,Normal_10$columns),
                MOM_10=FNormXhat(MOM_10,Z,V,B,Theta,Beta,M,MOM_10$columns),
                COMBAT_10=FNormXhatC(COMBAT_10$Z,COMBAT_10$Gamma,t(COMBAT)),
                #FastBFA_10=FNormXhatL(Laplace_10_Vl20$Omega,Laplace_10_Vl20$B,Z,V,B,Theta,Beta,M),
                Lasso_10=FNormXhatL(lasso_10.Ez,as.matrix(lasso_10$loadings),Z,V,B,Theta,Beta,M),
                Flat_100=FNormXhat(Flat_100,Z,V,B,Theta,Beta,M,Flat_100$columns),
                Normal_100=FNormXhat(Normal_100,Z,V,B,Theta,Beta,M,Normal_100$columns),
                MOM_100=FNormXhat(MOM_100,Z,V,B,Theta,Beta,M,MOM_100$columns),
                COMBAT_100=FNormXhatC(COMBAT_100$Z,COMBAT_100$Gamma,t(COMBAT)),
                #FastBFA_100=FNormXhatL(Laplace_100_Vl20$Omega,Laplace_100_Vl20$B,Z,V,B,Theta,Beta,M),
                Lasso_100=FNormXhatL(lasso_100.Ez,as.matrix(lasso_100$loadings),Z,V,B,Theta,Beta,M))


it=data.frame(Flat_10=Flat_10$iterations,
              Normal_10=Normal_10$iterations,
              MOM_10=MOM_10$iterations,
              COMBAT_10=COMBAT_10$niter,
              #FastBFA_10=(Laplace_10_Vl5$niter+Laplace_10_Vl10$niter+Laplace_10_Vl10$niter),
              Lasso_10=0,
              Flat_100=Flat_100$iterations,
              Normal_100=Normal_100$iterations,
              MOM_100=MOM_100$iterations,
              COMBAT_100=COMBAT_100$niter,
              #FastBFA_100=(Laplace_100_Vl5$niter+Laplace_100_Vl10$niter+Laplace_100_Vl10$niter),
              Lasso_100=0)

tableFN=rbind.data.frame(q_hat=q.hat.2,Mhat=m.hat.2,FN_X=FN.x,FN_ZM2=FN.ZM,it=it)

#####Plost####
##Scaterplots
plot.scat(Z%*%t(M),Flat_100$Ez%*%t(Flat_100$M))
plot.scat(Z%*%t(M),Normal_100$Ez%*%t(Normal_100$Mpost))
plot.scat(Z%*%t(M),MOM_100$Ez%*%t(MOM_100$Mpost))
plot.scat(Z%*%t(M),COMBAT_100$Z%*%t(COMBAT_100$Gamma))
#plot.scat(Z%*%t(M),resultLaplace_100_Vl20$Omega%*%t(resultLaplace_100_Vl20$B))
plot.scat(Z%*%t(M),lasso_100.Ez%*%t(as.matrix(lasso_100$loadings)))

##Heatmaps
LassoM<-as.matrix(lasso_100$loadings)
colnames(LassoM)<-NULL
rownames(LassoM)<-NULL
plot.heat(LassoM)+scale_fill_gradient2(limits=c(-.5, .5))+
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank(),
        axis.title.y=element_blank(),
        axis.text.y=element_blank(),
        axis.ticks.y=element_blank())
