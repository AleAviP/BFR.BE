age=V_ov[,3],
status=V_ov[,4])
#####Plots####
par(mar=c(1,1,1,1)+1.1)
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "")
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "")
plot(FAov_var_COMBAT$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death>(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "")
plot(FAov_var_COMBAT$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "")
#####Plots####
par(mar=c(1,1,1,1)+1.1)
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "")
plot(FAov_var_COMBAT$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "")
plot(FA.ov(MOM_100,B_ov)[,order(-apply(MOM_100$M^2,2,sum))[1:2]],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "")
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "",
labels = FALSE)
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "",
labels = FALSE,
tck = -0.01)
#####Plots####
par(mar=c(1,1,1,1)+1.1)
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "",
labels = FALSE,
tck = -0.01)
plot(FAov_var_COMBAT$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "")
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
xlab = "",
ylab = "",
labels = FALSE,
tck = 0)
plot(FAov_var_COMBAT$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
xlab = "",
ylab = "",
tck = 0)
plot(FAov_var_COMBAT$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
labels = FALSE,
tck = 0)
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
labels = FALSE,
tck = 0)
warnings()
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
ann=FALSE,
tck = 0)
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
ann=FALSE,
axes=FALSE,
tck = 0)
box()
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
ann=FALSE,
axes=FALSE)
box()
#####Plots####
par(mar=c(1,1,1,1)+1.1)
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
ann=FALSE,
axes=FALSE)
box()
plot(FAov_var_COMBAT$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
ann=FALSE,
axes=FALSE)
box()
plot(FA.ov(MOM_100,B_ov)[,order(-apply(MOM_100$M^2,2,sum))[1:2]],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
ann=FALSE,
axes=FALSE)
box()
library(BFR.BE) #My code
library(sva) #COMBAT
library(cate) #MLE
library(TCGA2STAT) #Dataset
library(curatedOvarianData) #Dataset
library(survcomp) #Concordance index
library(survival) #Cox Model
#####Loading data####
set.seed(123)
#Combine function
combine3 <- function(X1, X2) {
fids <- intersect(featureNames(X1), featureNames(X2))
X1 <- X1$dat[fids,]
X2 <- X2$dat[fids,]
cbind(X1,X2)
}
#Data with 2 batches:
LUSC.U133<-getTCGA(disease="LUSC", data.type="mRNA_Array", type="U133", clinical=TRUE, cvars="yearstobirth")
dim(LUSC.U133$dat) #12042   133
LUSC.Huex<-getTCGA(disease="LUSC", data.type="mRNA_Array", type="Huex", clinical=TRUE, cvars="yearstobirth")
dim(LUSC.Huex$dat) #18632   112
#Setting data in our format
X<- combine3(LUSC.U133,LUSC.Huex)
dim(X) #11975   245
#Genes with more variability
var <- data.frame(variance = apply(X,1,var))
index.var <- c(1:nrow(X))[var$variance>quantile(var$variance,.90)]
X_var=X[index.var,]
dim(X_var) #1198  245
n = ncol(X_var) #245
p = nrow(X_var) #1198
batch<-c(rep("U133",ncol(LUSC.U133$dat)),
rep("Huex",ncol(LUSC.Huex$dat)))
B = matrix(ncol=2, c(ifelse(batch=="U133",1,0),ifelse(batch=="U133",0,1)))
p_b = ncol(B)
V = as.factor(matrix(nrow=n,c(LUSC.U133$merged.dat[,"YEARSTOBIRTH"],LUSC.Huex$merged.dat[,"YEARSTOBIRTH"])))
p_v = ncol(V)
#Normalising data
X_var_aux=preProcess(t(X_var), method=c("center", "scale"))
X_var_std <- predict(X_var_aux, t(X_var))
##MOM
MOM_100=BFR.BE.EM.CV(x=X_var_std,v=V,b=B, q = 100)
mod_2 <- model.matrix(~as.factor(V), data=data.frame(X_var_std))
combat_edata_2 <- ComBat(dat=t(X_var_std), batch=B[,1], mod=mod_2)
#Number of factors with %covariance
S <- cov(t(combat_edata_2))
l <- eigen(S)$values
v <- eigen(S)$vector
pc <- t(combat_edata_2) %*% v
Position(function(x) x > .9,cumsum(l)/sum(l)) #79
FA_var_COMBAT =  fa.em(t(combat_edata_2),Position(function(x) x > .9,cumsum(l)/sum(l)),tol=0.001, maxiter = 100)
ev <- eigen(cor(t(X_var_std))) # get eigenvalues
#Number of factors with %covariance
S2 <- cov(X_var_std)
l2 <- eigen(S2)$values
v2 <- eigen(S2)$vector
pc2 <- X_var_std %*% v
Position(function(x) x > .9,cumsum(l2)/sum(l2)) #26
FA_var = fa.em((X_var_std),Position(function(x) x > .9,cumsum(l2)/sum(l2)),tol=0.001, maxiter = 100)
####Survival analysis####
#COX
# Fit Cox Model
survival_data = data.frame(days2death=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"daystodeath"],
LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"daystodeath"])),
stage=as.factor(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"pathologicstage"],
LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"pathologicstage"])),
age=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"yearstobirth"],
LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"yearstobirth"])),
status=as.numeric(c(LUSC.U133$clinical[LUSC.U133$merged.dat[,1],"vitalstatus"],
LUSC.Huex$clinical[LUSC.Huex$merged.dat[,1],"vitalstatus"])))
survival_data$days2death[is.na(survival_data$days2death)]=0
sum(apply(MOM_100$gamma>0.5,2,sum)!=0)
#####Plots####
par(mar=c(1,1,1,1)+1.1)
plot(FA_var$Z[,1:2],pch=c(18,8)[as.factor(B[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
ann=FALSE,
axes=FALSE)
box()
View(pc2)
plot(FA_var_COMBAT$Z[,1:2],pch=c(18,8)[as.factor(B[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
ann=FALSE,
axes=FALSE)
box()
plot(FA.ov(MOM_100,B)[,order(-apply(MOM_100$M^2,2,sum))[1:2]],pch=c(18,8)[as.factor(B[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
ann=FALSE,
axes=FALSE)
box()
library(BFR.BE) #My code
library(sva) #COMBAT
library(cate) #MLE
library(curatedOvarianData) #OV data
library(survcomp) #Concordance index
library(survival) #Cox Model
#####Loading data####
set.seed(123)
#Combine function
combine2 <- function(X1, X2) {
fids <- intersect(featureNames(X1), featureNames(X2))
X1 <- X1[fids,]
X2 <- X2[fids,]
ExpressionSet(cbind(exprs(X1),exprs(X2)),
AnnotatedDataFrame(rbind(as(phenoData(X1),"data.frame"),
as(phenoData(X2),"data.frame")))
)
}
#Data with 2 batches:
#E.MTAB.386_eset Angiogenic mRNA and microRNA gene expression signature predicts a novel subtype of serous ovarian cancer.
data(E.MTAB.386_eset)
#GSE30161_eset: Multi-gene expression predictors of single drug responses to adjuvant chemotherapy in ovarian carcinoma: predicting platinum resistance.
data(GSE30161_eset)
#Setting data in our format
X_ov = combine2(E.MTAB.386_eset, GSE30161_eset)
batch = substr(sampleNames(X_ov),1,4)
batch_ov = as.factor(grepl("DFCI",sampleNames(X_ov)))
X_ov_exp = t(exprs(X_ov))
n_ov = nrow(X_ov_exp) #187
B_ov = matrix(ncol=2, c(ifelse(batch_ov=="TRUE",1,0),ifelse(batch_ov=="TRUE",0,1)))
p_b_ov = ncol(B_ov)
V_ov = matrix(nrow=n_ov,c(E.MTAB.386_eset$days_to_death,GSE30161_eset$days_to_death,
E.MTAB.386_eset$tumorstage,GSE30161_eset$tumorstage,
E.MTAB.386_eset$age_at_initial_pathologic_diagnosis,GSE30161_eset$age_at_initial_pathologic_diagnosis,
ifelse(E.MTAB.386_eset$vital_status=="living",1,0),ifelse(GSE30161_eset$vital_status=="living",1,0)))
V_ov_2 = as.matrix(ncol = 1, V_ov[,3])
p_v_ov = ncol(V_ov_2)
#Genes with more variability
var_OV <- data.frame(variance = apply(X_ov_exp,2,var))
index_OV_var <- c(1:ncol(X_ov_exp))[var_OV$variance>quantile(var_OV$variance,.90)]
X_ov_exp_var=X_ov_exp[,index_OV_var]
dim(X_ov_exp_var) #187 1007
#Normalising data
X_var_std=preProcess(X_ov_exp_var, method=c("center", "scale"))
X_var_std <- predict(X_var_std, X_ov_exp_var)
##MOM
MOM_100=BFR.BE.EM.CV(x=X_var_std, v=V_ov_2, b=B_ov, q = 100)
mod_2 <- model.matrix(~as.factor(V_ov_2), data=data.frame(X_var_std))
combat_edata_2 <- ComBat(dat=t(X_var_std), batch=B_ov[,1], mod=mod_2)
#Number of factors with %covariance
S <- cov(t(combat_edata_2))
l <- eigen(S)$values
v <- eigen(S)$vector
pc <- t(combat_edata_2) %*% v
Position(function(x) x > .9,cumsum(l)/sum(l)) #101
FAov_var_COMBAT =  fa.em(t(combat_edata_2),Position(function(x) x > .9,cumsum(l)/sum(l)),tol=0.001, maxiter = 100)
ev <- eigen(cor(t(X_var_std))) # get eigenvalues
#Number of factors with %covariance
S2 <- cov(X_var_std)
l2 <- eigen(S2)$values
v2 <- eigen(S2)$vector
pc2 <- X_var_std %*% v
Position(function(x) x > .9,cumsum(l2)/sum(l2)) #2
FAov_var = fa.em((X_var_std),Position(function(x) x > .9,cumsum(l2)/sum(l2)),tol=0.001, maxiter = 100)
#####Plots####
par(mar=c(1,1,1,1)+1.1)
plot(FAov_var_COMBAT$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
ann=FALSE,
axes=FALSE)
box()
####Survival analysis####
#COX
# Fit Cox Model
survival_data = data.frame(days2death=V_ov[,1],
stage=V_ov[,2],
age=V_ov[,3],
status=V_ov[,4])
#####Plots####
par(mar=c(1,1,1,1)+1.1)
plot(FAov_var$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
ann=FALSE,
axes=FALSE)
box()
plot(FAov_var_COMBAT$Z[,1:2],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
ann=FALSE,
axes=FALSE)
box()
plot(FA.ov(MOM_100,B_ov)[,order(-apply(MOM_100$M^2,2,sum))[1:2]],pch=c(18,8)[as.factor(B_ov[,1])],
col=c("black","darkgray")[as.factor(survival_data$days2death<(365*3))],
cex=1.5,cex.lab=1.5,cex.main=1.5,
ann=FALSE,
axes=FALSE)
box()
Flat_100=BFR.BE.EM.CV(x=X_var_std, v=V_ov_2, b=B_ov, q = 100, prior="Flat")
#Normal
Normal_100=BFR.BE.EM.CV(x=X_var_std, v=V_ov_2, b=B_ov, q = 100, prior="Normal")
#Different initiation MOM
init_Flat<-list(theta=Flat_100$Theta,
sigma=diag(Flat_100$sigma[,1]),
M=Flat_100$M,
z=Flat_100$Ez,
D=Flat_100$D,
p.gamma=Flat_100$gamma,
g.theta=Flat_100$gTheta)
MOM_100_difInit=BFR.BE.EM.CV(x=X_var_std, v=V_ov_2, b=B_ov, q = 100, init=init_Flat)
y_surv <- Surv(survival_data$days2death, survival_data$status)
#CV
group=MOM_100$group
y_CV=llply(.data = 1:10, .fun = function(k){
Surv(survival_data$days2death[-group[[k]]], survival_data$status[-group[[k]]])
}, .parallel = FALSE)
##CV
#Flat
#Checking same groups 0 is the same
sum(unlist(llply(.data = 1:10, .fun = function(k){ sum(group[[k]]!=Flat_100$group[[k]]) }, .parallel = FALSE)))
#All
Model_Flat<-data.frame(y=y_surv,Flat_100$Ez)
form_Flat <- formula(y ~ .,Model_Flat)
cox_bmt_Flat <- coxph(form_Flat,data = Model_Flat)
summary(cox_bmt_Flat)$concordance[1]
#CV
Model_CV_Flat=llply(.data = 1:10, .fun = function(k){
if(Flat_100$rotation){
data.frame(y=y_CV[[k]],Flat_100$varimax[[k]]$Ez)
}else{
data.frame(y=y_CV[[k]],Flat_100$novarimax[[k]]$Ez)
}
}, .parallel = FALSE)
cox_bmt_CV_Flat=llply(.data = 1:10, .fun = function(k){
coxph(formula(y ~ .,Model_CV_Flat[[k]]),data = Model_CV_Flat[[k]])
}, .parallel = FALSE)
Cox_train_Flat<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Flat[[k]])$concordance[1]))
#Ez of test
if(Flat_100$rotation){
EZ_test_Flat<-Ez.test.ov(X_var_std,V_ov_2,B_ov,Flat_100$varimax,group,100)
}else{
EZ_test_Flat<-Ez.test.ov(X_var_std,V_ov_2,B_ov,Flat_100$novarimax,group,100)
}
predictions_CV_Flat_test=lapply(1:10, function(k) predict(cox_bmt_CV_Flat[[k]],data.frame(EZ_test_Flat[[k]])))
Cox_test_Flat <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Flat_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
mean(Cox_test_Flat)
#Normal
#All
#Checking same groups 0 is the same
sum(unlist(llply(.data = 1:10, .fun = function(k){ sum(group[[k]]!=Normal_100$group[[k]]) }, .parallel = FALSE)))
Model_Normal<-data.frame(y=y_surv,Normal_100$Ez[,apply(Normal_100$gamma>.5,2,sum)!=0])
form_Normal <- formula(y ~ .,Model_Normal)
cox_bmt_Normal <- coxph(form_Normal,data = Model_Normal)
summary(cox_bmt_Normal)$concordance[1]
#CV
Model_CV_Normal=llply(.data = 1:10, .fun = function(k){
if(Normal_100$rotation){
data.frame(y=y_CV[[k]],Normal_100$varimax[[k]]$Ez[,apply(Normal_100$varimax[[k]]$gamma>.5,2,sum)!=0])
}else{
data.frame(y=y_CV[[k]],Normal_100$novarimax[[k]]$Ez[,apply(Normal_100$novarimax[[k]]$gamma>.5,2,sum)!=0])
}
}, .parallel = FALSE)
cox_bmt_CV_Normal=llply(.data = 1:10, .fun = function(k){
coxph(formula(y ~ .,Model_CV_Normal[[k]]),data = Model_CV_Normal[[k]])
}, .parallel = FALSE)
Cox_train_Normal<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_Normal[[k]])$concordance[1]))
#Ez of test
if(Normal_100$rotation){
EZ_test_Normal<-Ez.test.ov(X_var_std,V_ov_2,B_ov,Normal_100$varimax,group,100)
predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(Normal_100$varimax[[k]]$gamma>.5,2,sum)!=0])))
}else{
EZ_test_Normal<-Ez.test.ov(X_var_std,V_ov_2,B_ov,Normal_100$novarimax,group,100)
predictions_CV_Normal_test=lapply(1:10, function(k) predict(cox_bmt_CV_Normal[[k]],data.frame(EZ_test_Normal[[k]][,apply(Normal_100$novarimax[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_Normal <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_Normal_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
mean(Cox_test_Normal)
#MOM
#All
Model_MOM<-data.frame(y=y_surv,MOM_100$Ez[,apply(MOM_100$gamma>.5,2,sum)!=0])
form_MOM <- formula(y ~ .,Model_MOM)
cox_bmt <- coxph(form_MOM,data = Model_MOM)
summary(cox_bmt)$concordance[1]
Model_CV_MOM=llply(.data = 1:10, .fun = function(k){
if(MOM_100$rotation){
data.frame(y=y_CV[[k]],MOM_100$varimax[[k]]$Ez[,apply(MOM_100$varimax[[k]]$gamma>.5,2,sum)!=0])
}else{
data.frame(y=y_CV[[k]],MOM_100$novarimax[[k]]$Ez[,apply(MOM_100$novarimax[[k]]$gamma>.5,2,sum)!=0])
}
}, .parallel = FALSE)
cox_bmt_CV_MOM=llply(.data = 1:10, .fun = function(k){
coxph(formula(y ~ .,Model_CV_MOM[[k]]),data = Model_CV_MOM[[k]])
}, .parallel = FALSE)
Cox_train_MOM<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM[[k]])$concordance[1]))
if(MOM_100$rotation){
EZ_test_MOM<-Ez.test.ov(X_var_std,V_ov_2,B_ov,MOM_100$varimax,group,100)
predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(MOM_100$varimax[[k]]$gamma>.5,2,sum)!=0])))
}else{
EZ_test_MOM<-Ez.test.ov(X_var_std,V_ov_2,B_ov,MOM_100$novarimax,group,100)
predictions_CV_MOM_test=lapply(1:10, function(k) predict(cox_bmt_CV_MOM[[k]],data.frame(EZ_test_MOM[[k]][,apply(MOM_100$novarimax[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
boxplot(Cox_test_MOM)
mean(Cox_test_MOM)
#MOM difInit
Model_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
if(MOM_100_difInit$rotation){
data.frame(y=y_CV[[k]],MOM_100_difInit$varimax[[k]]$Ez[,apply(MOM_100_difInit$varimax[[k]]$gamma>.5,2,sum)!=0])
}else{
data.frame(y=y_CV[[k]],MOM_100_difInit$novarimax[[k]]$Ez[,apply(MOM_100_difInit$novarimax[[k]]$gamma>.5,2,sum)!=0])
}
}, .parallel = FALSE)
cox_bmt_CV_MOM_difInit=llply(.data = 1:10, .fun = function(k){
coxph(formula(y ~ .,Model_CV_MOM_difInit[[k]]),data = Model_CV_MOM_difInit[[k]])
}, .parallel = FALSE)
Cox_train_MOM_difInit<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_MOM_difInit[[k]])$concordance[1]))
#Ez of test
if(MOM_100_difInit$rotation){
EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V_ov_2,B_ov,MOM_100_difInit$varimax,group,100)
predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(MOM_100_difInit$varimax[[k]]$gamma>.5,2,sum)!=0])))
}else{
EZ_test_MOM_difInit<-Ez.test.ov(X_var_std,V_ov_2,B_ov,MOM_100_difInit$novarimax,group,100)
predictions_CV_MOM_test_difInit=lapply(1:10, function(k) predict(cox_bmt_CV_MOM_difInit[[k]],data.frame(EZ_test_MOM_difInit[[k]][,apply(MOM_100_difInit$novarimax[[k]]$gamma>.5,2,sum)!=0])))
}
Cox_test_MOM_difInit <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_MOM_test_difInit[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
mean(Cox_test_MOM_difInit)
##COMBAT
#90%
#All
Model_COMBAT<-data.frame(y=y_surv,FAov_var_COMBAT$Z)
form_COMBAT  <- formula(y ~.,Model_COMBAT)
cox_bmt_COMBAT <- coxph(form_COMBAT,data = Model_COMBAT)
summary(cox_bmt_COMBAT)$concordance[1]
#CV
####SAME corrected data####
sumCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
print(y)
S <- cov(t(combat_edata_2[,-group[[y]]]))
l <- eigen(S)$values
v <- eigen(S)$vector
aux<-cumsum(l)/sum(l)
return(aux)
}, .parallel = FALSE)
dimCOMBAT_CV<-unlist(lapply(1:10, function(x) Position(function(k) k > .9,sumCOMBAT_CV[[x]])))
resultCOMBAT_CV= llply(.data = 1:10, .fun = function(y){
print(y)
fa.em(t(combat_edata_2[,-group[[y]]]),dimCOMBAT_CV[y],tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
data.frame(y=y_CV[[k]],resultCOMBAT_CV[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT=llply(.data = 1:10, .fun = function(k){
coxph(formula(y ~ .,Model_CV_COMBAT[[k]]),data = Model_CV_COMBAT[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV,group)
predictions_CV_COMBAT_test=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT[[k]],data.frame(EZ_test_COMBAT[[k]])))
Cox_test_COMBAT <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
mean(Cox_test_COMBAT)
#70%
#All
Model_COMBAT_70<-data.frame(y=y_surv,FAov_var_COMBAT_70$Z)
form_COMBAT_70  <- formula(y ~.,Model_COMBAT_70)
cox_bmt_COMBAT_70 <- coxph(form_COMBAT_70,data = Model_COMBAT_70)
summary(cox_bmt_COMBAT_70)$concordance[1]
#CV
####SAME corrected data####
dimCOMBAT_CV_70<-unlist(lapply(1:10, function(x) Position(function(k) k > .7,sumCOMBAT_CV[[x]])))
resultCOMBAT_CV_70= llply(.data = 1:10, .fun = function(y){
print(y)
fa.em(t(combat_edata_2[,-group[[y]]]),dimCOMBAT_CV_70[y],tol=0.001, maxiter = 100)
}, .parallel = FALSE)
Model_CV_COMBAT_70=llply(.data = 1:10, .fun = function(k){
data.frame(y=y_CV[[k]],resultCOMBAT_CV_70[[k]]$Z)
}, .parallel = FALSE)
cox_bmt_CV_COMBAT_70=llply(.data = 1:10, .fun = function(k){
coxph(formula(y ~ .,Model_CV_COMBAT_70[[k]]),data = Model_CV_COMBAT_70[[k]])
}, .parallel = FALSE)
Cox_train_COMBAT_70<-unlist(lapply(1:10, function(k) summary(cox_bmt_CV_COMBAT_70[[k]])$concordance[1]))
#Ez of test
EZ_test_COMBAT_70<-Ez.test.COMBAT.ov(t(combat_edata_2),resultCOMBAT_CV_70,group)
predictions_CV_COMBAT_test_70=lapply(1:10, function(k) predict(cox_bmt_CV_COMBAT_70[[k]],data.frame(EZ_test_COMBAT_70[[k]])))
Cox_test_COMBAT_70 <-unlist(lapply(1:10, function(k) concordance.index(x=predictions_CV_COMBAT_test_70[[k]],surv.time=survival_data$days2death[group[[k]]],surv.event=survival_data$status[group[[k]]])$c.index))
mean(Cox_test_COMBAT_70)
#####Table####
q.hat.2=data.frame(Flat=sum(Flat_100$gTheta!=0),
Normal_SS=sum(apply(Normal_100$gamma>0.5,2,sum)!=0),
MOM_SS=sum(apply(MOM_100_difInit$gamma>0.5,2,sum)!=0),
ComBat_90=ncol(FAov_var_COMBAT$Gamma),
ComBat_70=ncol(FAov_var_COMBAT_70$Gamma))
m.hat=data.frame(Flat=sum(Flat_100$Mpost!=0),
Normal_SS=sum(Normal_100$Mpost!=0),
MOM_SS=sum(MOM_100_difInit$Mpost!=0),
ComBat_90=sum(FAov_var_COMBAT$Gamma!=0),
ComBat_70=sum(FAov_var_COMBAT_70$Gamma!=0))
Cox.index=data.frame(Flat=mean(Cox_test_Flat,na.rm=TRUE),
Normal_SS=mean(Cox_test_Normal,na.rm=TRUE),
MOM_SS=mean(Cox_test_MOM_difInit,na.rm=TRUE),
ComBat_90=mean(Cox_test_COMBAT,na.rm=TRUE),
ComBat_70=mean(Cox_test_COMBAT_70,na.rm=TRUE))
tableOv=rbind.data.frame(q_hat=q.hat.2,Mhat=m.hat,CI=Cox.index)
t(tableOv)
